// hexdump-O0.h
// Generated by decompiling hexdump-O0.so
// using Reko decompiler version 0.9.3.0.

/*
// Equivalence classes ////////////
Eq_1: (struct "Globals" (FFFFFFFF code tFFFFFFFF) (E00 code t0E00) (2008 (ptr64 code) ptr2008) (2020 (ptr64 code) ptr2020) (2030 (ptr64 code) ptr2030) (2040 (ptr64 code) ptr2040) (2048 (ptr64 code) ptr2048) (2050 byte b2050))
	globals_t (in globals : (ptr64 (struct "Globals")))
Eq_19: (union "Eq_19" (int64 u0) (uint64 u1))
	T_19 (in a5_7 : Eq_19)
	T_22 (in 0x2008<u64> - 0x2008<u64> : word64)
Eq_20: (union "Eq_20" (int64 u0) (ptr64 u1))
	T_20 (in 0000000000002008 : ptr64)
Eq_21: (union "Eq_21" (int64 u0) (ptr64 u1))
	T_21 (in 0000000000002008 : ptr64)
Eq_24: (union "Eq_24" (int64 u0) (uint64 u1))
	T_24 (in a5_7 >> 0x3F<u32> : word64)
Eq_26: (union "Eq_26" (int64 u0) (uint64 u1))
	T_26 (in a5_7 >> 3<u32> : word64)
Eq_27: (union "Eq_27" (int64 u0) (uint64 u1))
	T_27 (in (a5_7 >>u 0x3F<u32>) + (a5_7 >> 3<u32>) : word64)
Eq_51: (fn void ())
	T_51 (in deregister_tm_clones : ptr64)
	T_52 (in signature of deregister_tm_clones : void)
Eq_59: (fn void ())
	T_59 (in register_tm_clones : ptr64)
	T_60 (in signature of register_tm_clones : void)
Eq_65: (union "Eq_65" (int32 u0) (int64 u1))
	T_65 (in -16<i32> : int32)
Eq_67: (struct "Eq_67" (F78 byte b0F78))
	T_67 (in qwLocC8 + (fp + -16<i32>) : word64)
Eq_74: (union "Eq_74" (int32 u0) (int64 u1))
	T_74 (in -16<i32> : int32)
Eq_76: (struct "Eq_76" (F78 byte b0F78))
	T_76 (in qwLocC8 + 1<64> + (fp + -16<i32>) : word64)
Eq_80: (fn Eq_87 ((ptr64 char)))
	T_80 (in strlen : ptr64)
	T_81 (in signature of strlen : void)
Eq_87: size_t
	T_87 (in strlen(*qwLoc30) : size_t)
Eq_90: (fn void ())
	T_90 (in fn0000000000000450 : ptr64)
	T_91 (in signature of fn0000000000000450 : void)
// Type Variables ////////////
globals_t: (in globals : (ptr64 (struct "Globals")))
  Class: Eq_1
  DataType: (ptr64 Eq_1)
  OrigDataType: (ptr64 (struct "Globals"))
T_2: (in t1 : word64)
  Class: Eq_2
  DataType: word64
  OrigDataType: word64
T_3: (in t3 : word64)
  Class: Eq_3
  DataType: word64
  OrigDataType: word64
T_4: (in t3_8 : (ptr64 code))
  Class: Eq_4
  DataType: (ptr64 code)
  OrigDataType: (ptr64 code)
T_5: (in 0000000000002008 : ptr64)
  Class: Eq_5
  DataType: (ptr64 (ptr64 code))
  OrigDataType: (ptr64 (struct (0 T_6 t0000)))
T_6: (in Mem0[0x0000000000002008<p64>:word64] : word64)
  Class: Eq_4
  DataType: (ptr64 code)
  OrigDataType: word64
T_7: (in t3_5 : (ptr64 code))
  Class: Eq_7
  DataType: (ptr64 code)
  OrigDataType: (ptr64 code)
T_8: (in 0000000000002020 : ptr64)
  Class: Eq_8
  DataType: (ptr64 (ptr64 code))
  OrigDataType: (ptr64 (struct (0 T_9 t0000)))
T_9: (in Mem0[0x0000000000002020<p64>:word64] : word64)
  Class: Eq_7
  DataType: (ptr64 code)
  OrigDataType: word64
T_10: (in 0000000000002008 : ptr64)
  Class: Eq_10
  DataType: ptr64
  OrigDataType: ptr64
T_11: (in 0000000000002008 : ptr64)
  Class: Eq_10
  DataType: ptr64
  OrigDataType: ptr64
T_12: (in 0x2008<u64> == 0x2008<u64> : bool)
  Class: Eq_12
  DataType: bool
  OrigDataType: bool
T_13: (in t1_9 : (ptr64 code))
  Class: Eq_13
  DataType: (ptr64 code)
  OrigDataType: (ptr64 code)
T_14: (in 0000000000002030 : ptr64)
  Class: Eq_14
  DataType: (ptr64 (ptr64 code))
  OrigDataType: (ptr64 (struct (0 T_15 t0000)))
T_15: (in Mem0[0x0000000000002030<p64>:word64] : word64)
  Class: Eq_13
  DataType: (ptr64 code)
  OrigDataType: word64
T_16: (in 0<64> : word64)
  Class: Eq_13
  DataType: (ptr64 code)
  OrigDataType: word64
T_17: (in t1_9 == null : bool)
  Class: Eq_17
  DataType: bool
  OrigDataType: bool
T_18: (in t1_13 : word64)
  Class: Eq_18
  DataType: word64
  OrigDataType: word64
T_19: (in a5_7 : Eq_19)
  Class: Eq_19
  DataType: Eq_19
  OrigDataType: (union (int64 u0) (uint64 u1))
T_20: (in 0000000000002008 : ptr64)
  Class: Eq_20
  DataType: int64
  OrigDataType: (union (int64 u0) (ptr64 u1))
T_21: (in 0000000000002008 : ptr64)
  Class: Eq_21
  DataType: int64
  OrigDataType: (union (int64 u1) (ptr64 u0))
T_22: (in 0x2008<u64> - 0x2008<u64> : word64)
  Class: Eq_19
  DataType: Eq_19
  OrigDataType: int64
T_23: (in 0x3F<u32> : uint32)
  Class: Eq_23
  DataType: uint32
  OrigDataType: uint32
T_24: (in a5_7 >> 0x3F<u32> : word64)
  Class: Eq_24
  DataType: Eq_24
  OrigDataType: (union (int64 u1) (uint64 u0))
T_25: (in 3<u32> : uint32)
  Class: Eq_25
  DataType: uint32
  OrigDataType: uint32
T_26: (in a5_7 >> 3<u32> : word64)
  Class: Eq_26
  DataType: Eq_26
  OrigDataType: (union (int64 u1) (uint64 u0))
T_27: (in (a5_7 >>u 0x3F<u32>) + (a5_7 >> 3<u32>) : word64)
  Class: Eq_27
  DataType: Eq_27
  OrigDataType: (union (int64 u1) (uint64 u0))
T_28: (in 1<i32> : int32)
  Class: Eq_28
  DataType: int32
  OrigDataType: int32
T_29: (in (a5_7 >>u 0x3F<u32>) + (a5_7 >> 3<u32>) >> 1<i32> : word64)
  Class: Eq_29
  DataType: int64
  OrigDataType: int64
T_30: (in 0<64> : word64)
  Class: Eq_29
  DataType: int64
  OrigDataType: word64
T_31: (in (a5_7 >>u 0x3F<u32>) + (a5_7 >> 3<u32>) >> 1<i32> == 0<64> : bool)
  Class: Eq_31
  DataType: bool
  OrigDataType: bool
T_32: (in t1_14 : (ptr64 code))
  Class: Eq_32
  DataType: (ptr64 code)
  OrigDataType: (ptr64 code)
T_33: (in 0000000000002048 : ptr64)
  Class: Eq_33
  DataType: (ptr64 (ptr64 code))
  OrigDataType: (ptr64 (struct (0 T_34 t0000)))
T_34: (in Mem0[0x0000000000002048<p64>:word64] : word64)
  Class: Eq_32
  DataType: (ptr64 code)
  OrigDataType: word64
T_35: (in 0<64> : word64)
  Class: Eq_32
  DataType: (ptr64 code)
  OrigDataType: word64
T_36: (in t1_14 == null : bool)
  Class: Eq_36
  DataType: bool
  OrigDataType: bool
T_37: (in t1_20 : word64)
  Class: Eq_37
  DataType: word64
  OrigDataType: word64
T_38: (in ra : word64)
  Class: Eq_38
  DataType: word64
  OrigDataType: word64
T_39: (in s0_16 : (ptr64 byte))
  Class: Eq_39
  DataType: (ptr64 byte)
  OrigDataType: (ptr64 (struct (0 T_57 t0000)))
T_40: (in 0000000000002050 : ptr64)
  Class: Eq_39
  DataType: (ptr64 byte)
  OrigDataType: ptr64
T_41: (in 0000000000002050 : ptr64)
  Class: Eq_41
  DataType: (ptr64 byte)
  OrigDataType: (ptr64 (struct (0 T_42 t0000)))
T_42: (in Mem5[0x0000000000002050<p64>:byte] : byte)
  Class: Eq_42
  DataType: byte
  OrigDataType: byte
T_43: (in CONVERT(Mem5[0x0000000000002050<p64>:byte], byte, word64) : word64)
  Class: Eq_43
  DataType: word64
  OrigDataType: word64
T_44: (in 0<64> : word64)
  Class: Eq_43
  DataType: word64
  OrigDataType: word64
T_45: (in (word64) g_b2050 != 0<64> : bool)
  Class: Eq_45
  DataType: bool
  OrigDataType: bool
T_46: (in a5_12 : (ptr64 code))
  Class: Eq_46
  DataType: (ptr64 code)
  OrigDataType: (ptr64 code)
T_47: (in 0000000000002040 : ptr64)
  Class: Eq_47
  DataType: (ptr64 (ptr64 code))
  OrigDataType: (ptr64 (struct (0 T_48 t0000)))
T_48: (in Mem10[0x0000000000002040<p64>:word64] : word64)
  Class: Eq_46
  DataType: (ptr64 code)
  OrigDataType: word64
T_49: (in 0<64> : word64)
  Class: Eq_46
  DataType: (ptr64 code)
  OrigDataType: word64
T_50: (in a5_12 == null : bool)
  Class: Eq_50
  DataType: bool
  OrigDataType: bool
T_51: (in deregister_tm_clones : ptr64)
  Class: Eq_51
  DataType: (ptr64 Eq_51)
  OrigDataType: (ptr64 (fn T_53 ()))
T_52: (in signature of deregister_tm_clones : void)
  Class: Eq_51
  DataType: (ptr64 Eq_51)
  OrigDataType: 
T_53: (in deregister_tm_clones() : void)
  Class: Eq_53
  DataType: void
  OrigDataType: void
T_54: (in 1<8> : byte)
  Class: Eq_54
  DataType: byte
  OrigDataType: byte
T_55: (in 0<64> : word64)
  Class: Eq_55
  DataType: word64
  OrigDataType: word64
T_56: (in s0_16 + 0<64> : word64)
  Class: Eq_56
  DataType: ptr64
  OrigDataType: ptr64
T_57: (in Mem25[s0_16 + 0<64>:byte] : byte)
  Class: Eq_54
  DataType: byte
  OrigDataType: byte
T_58: (in t1_34 : word64)
  Class: Eq_58
  DataType: word64
  OrigDataType: word64
T_59: (in register_tm_clones : ptr64)
  Class: Eq_59
  DataType: (ptr64 Eq_59)
  OrigDataType: (ptr64 (fn T_61 ()))
T_60: (in signature of register_tm_clones : void)
  Class: Eq_59
  DataType: (ptr64 Eq_59)
  OrigDataType: 
T_61: (in register_tm_clones() : void)
  Class: Eq_61
  DataType: void
  OrigDataType: void
T_62: (in 0x41<8> : byte)
  Class: Eq_62
  DataType: byte
  OrigDataType: byte
T_63: (in qwLocC8 : word64)
  Class: Eq_63
  DataType: int64
  OrigDataType: int64
T_64: (in fp : ptr64)
  Class: Eq_64
  DataType: ptr64
  OrigDataType: ptr64
T_65: (in -16<i32> : int32)
  Class: Eq_65
  DataType: int32
  OrigDataType: (union (int32 u0) (int64 u1))
T_66: (in fp + -16<i32> : word64)
  Class: Eq_66
  DataType: ptr64
  OrigDataType: ptr64
T_67: (in qwLocC8 + (fp + -16<i32>) : word64)
  Class: Eq_67
  DataType: (ptr64 Eq_67)
  OrigDataType: (ptr64 (struct (F78 T_70 t0F78)))
T_68: (in 3960<i64> : int64)
  Class: Eq_68
  DataType: int64
  OrigDataType: int64
T_69: (in qwLocC8 + (fp + -16<i32>) + 3960<i64> : word64)
  Class: Eq_69
  DataType: word64
  OrigDataType: word64
T_70: (in Mem34[qwLocC8 + (fp + -16<i32>) + 3960<i64>:byte] : byte)
  Class: Eq_62
  DataType: byte
  OrigDataType: byte
T_71: (in 0x20<8> : byte)
  Class: Eq_71
  DataType: byte
  OrigDataType: byte
T_72: (in 1<64> : word64)
  Class: Eq_72
  DataType: word64
  OrigDataType: word64
T_73: (in qwLocC8 + 1<64> : word64)
  Class: Eq_73
  DataType: int64
  OrigDataType: int64
T_74: (in -16<i32> : int32)
  Class: Eq_74
  DataType: int32
  OrigDataType: (union (int32 u0) (int64 u1))
T_75: (in fp + -16<i32> : word64)
  Class: Eq_75
  DataType: ptr64
  OrigDataType: ptr64
T_76: (in qwLocC8 + 1<64> + (fp + -16<i32>) : word64)
  Class: Eq_76
  DataType: (ptr64 Eq_76)
  OrigDataType: (ptr64 (struct (F78 T_79 t0F78)))
T_77: (in 3960<i64> : int64)
  Class: Eq_77
  DataType: int64
  OrigDataType: int64
T_78: (in qwLocC8 + 1<64> + (fp + -16<i32>) + 3960<i64> : word64)
  Class: Eq_78
  DataType: int64
  OrigDataType: int64
T_79: (in Mem40[qwLocC8 + 1<64> + (fp + -16<i32>) + 3960<i64>:byte] : byte)
  Class: Eq_71
  DataType: byte
  OrigDataType: byte
T_80: (in strlen : ptr64)
  Class: Eq_80
  DataType: (ptr64 Eq_80)
  OrigDataType: (ptr64 (fn T_87 (T_86)))
T_81: (in signature of strlen : void)
  Class: Eq_80
  DataType: (ptr64 Eq_80)
  OrigDataType: 
T_82: (in a0 : (ptr64 char))
  Class: Eq_82
  DataType: (ptr64 char)
  OrigDataType: 
T_83: (in qwLoc30 : word64)
  Class: Eq_83
  DataType: (ptr64 (ptr64 char))
  OrigDataType: (ptr64 (struct (0 T_86 t0000)))
T_84: (in 0<64> : word64)
  Class: Eq_84
  DataType: word64
  OrigDataType: word64
T_85: (in qwLoc30 + 0<64> : word64)
  Class: Eq_85
  DataType: word64
  OrigDataType: word64
T_86: (in Mem15[qwLoc30 + 0<64>:word64] : word64)
  Class: Eq_82
  DataType: (ptr64 char)
  OrigDataType: (ptr64 char)
T_87: (in strlen(*qwLoc30) : size_t)
  Class: Eq_87
  DataType: Eq_87
  OrigDataType: size_t
T_88: (in CONVERT(strlen(*qwLoc30), size_t, uint64) : uint64)
  Class: Eq_88
  DataType: uint64
  OrigDataType: uint64
T_89: (in a0_20 : word64)
  Class: Eq_88
  DataType: uint64
  OrigDataType: uint64
T_90: (in fn0000000000000450 : ptr64)
  Class: Eq_90
  DataType: (ptr64 Eq_90)
  OrigDataType: (ptr64 (fn T_92 ()))
T_91: (in signature of fn0000000000000450 : void)
  Class: Eq_90
  DataType: (ptr64 Eq_90)
  OrigDataType: 
T_92: (in fn0000000000000450() : void)
  Class: Eq_92
  DataType: void
  OrigDataType: void
*/
typedef struct Globals {
	<anonymous> tFFFFFFFF;	// FFFFFFFF
	<anonymous> t0E00;	// E00
	<anonymous> * ptr2008;	// 2008
	<anonymous> * ptr2020;	// 2020
	<anonymous> * ptr2030;	// 2030
	<anonymous> * ptr2040;	// 2040
	<anonymous> * ptr2048;	// 2048
	byte b2050;	// 2050
} Eq_1;

typedef union Eq_19 {
	int64 u0;
	uint64 u1;
} Eq_19;

typedef union Eq_20 {
	int64 u0;
	ptr64 u1;
} Eq_20;

typedef union Eq_21 {
	int64 u0;
	ptr64 u1;
} Eq_21;

typedef union Eq_24 {
	int64 u0;
	uint64 u1;
} Eq_24;

typedef union Eq_26 {
	int64 u0;
	uint64 u1;
} Eq_26;

typedef union Eq_27 {
	int64 u0;
	uint64 u1;
} Eq_27;

typedef void (Eq_51)();

typedef void (Eq_59)();

typedef union Eq_65 {
	int32 u0;
	int64 u1;
} Eq_65;

typedef struct Eq_67 {
	byte b0F78;	// F78
} Eq_67;

typedef union Eq_74 {
	int32 u0;
	int64 u1;
} Eq_74;

typedef struct Eq_76 {
	byte b0F78;	// F78
} Eq_76;

typedef size_t (Eq_80)(char *);

typedef size_t Eq_87;

typedef void (Eq_90)();

