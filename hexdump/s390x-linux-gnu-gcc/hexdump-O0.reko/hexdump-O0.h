// hexdump-O0.h
// Generated by decompiling hexdump-O0.so
// using Reko decompiler version 0.9.3.0.

/*
// Equivalence classes ////////////
Eq_1: (struct "Globals")
	globals_t (in globals : (ptr32 (struct "Globals")))
Eq_14: (union "Eq_14" (word64 u0) ((ptr32 code) u1))
	T_14 (in r1_37 : Eq_14)
	T_23 (in Mem34[SEQ(SLICE(fp - 160<i32>, word32, 32), 0x00001FE8<p32>) + 0<64>:word64] : word64)
	T_24 (in 0<64> : word64)
Eq_26: (fn void (Eq_28))
	T_26 (in frame_dummy : ptr32)
	T_27 (in signature of frame_dummy : void)
Eq_28: (union "Eq_28" (word64 u0) ((ptr32 code) u1))
	T_28 (in r14 : Eq_28)
	T_29 (in 000004AE : ptr32)
	T_34 (in r14 : Eq_28)
Eq_31: (fn void ())
	T_31 (in __do_global_ctors_aux : ptr32)
	T_32 (in signature of __do_global_ctors_aux : void)
Eq_35: (union "Eq_35" (int64 u0) (uint64 u1))
	T_35 (in r3_7 : Eq_35)
	T_44 (in SEQ(SLICE(r3, word32, 32), 0x2020<u32>) - SEQ(SLICE(r1, word32, 32), 0x2020<u32>) : word64)
Eq_45: (union "Eq_45" (int64 u0) (uint64 u1))
	T_45 (in r3_10 : Eq_45)
	T_50 (in (r3_7 >> 63<i32>) + (r3_7 >> 3<i32>) : word64)
Eq_55: (union "Eq_55" (bool u0) (byte u1))
	T_55 (in CC : byte)
Eq_56: (fn void (Eq_28))
	T_56 (in register_tm_clones : ptr32)
	T_57 (in signature of register_tm_clones : void)
Eq_59: (fn void ())
	T_59 (in call_frame_dummy : ptr32)
	T_60 (in signature of call_frame_dummy : void)
	T_62 (in call_frame_dummy : ptr32)
Eq_64: (fn void ())
	T_64 (in __do_global_dtors_aux : ptr32)
	T_65 (in signature of __do_global_dtors_aux : void)
// Type Variables ////////////
globals_t: (in globals : (ptr32 (struct "Globals")))
  Class: Eq_1
  DataType: (ptr32 Eq_1)
  OrigDataType: (ptr32 (struct "Globals"))
T_2: (in r6 : word64)
  Class: Eq_2
  DataType: word64
  OrigDataType: word64
T_3: (in r7 : word64)
  Class: Eq_3
  DataType: word64
  OrigDataType: word64
T_4: (in r8 : word64)
  Class: Eq_4
  DataType: word64
  OrigDataType: word64
T_5: (in r9 : word64)
  Class: Eq_5
  DataType: word64
  OrigDataType: word64
T_6: (in r10 : word64)
  Class: Eq_6
  DataType: word64
  OrigDataType: word64
T_7: (in r11 : word64)
  Class: Eq_7
  DataType: word64
  OrigDataType: word64
T_8: (in r13 : word64)
  Class: Eq_8
  DataType: word64
  OrigDataType: word64
T_9: (in r12_35 : word64)
  Class: Eq_9
  DataType: word64
  OrigDataType: word64
T_10: (in r12 : word64)
  Class: Eq_10
  DataType: word64
  OrigDataType: word64
T_11: (in SLICE(r12, word32, 32) : word32)
  Class: Eq_11
  DataType: word32
  OrigDataType: word32
T_12: (in 00001FC0 : ptr32)
  Class: Eq_12
  DataType: ptr32
  OrigDataType: ptr32
T_13: (in SEQ(SLICE(r12, word32, 32), 0x00001FC0<p32>) : word64)
  Class: Eq_9
  DataType: word64
  OrigDataType: word64
T_14: (in r1_37 : Eq_14)
  Class: Eq_14
  DataType: Eq_14
  OrigDataType: (union (word64 u0) ((ptr32 code) u1))
T_15: (in fp : ptr32)
  Class: Eq_15
  DataType: ptr32
  OrigDataType: ptr32
T_16: (in 160<i32> : int32)
  Class: Eq_16
  DataType: int32
  OrigDataType: int32
T_17: (in fp - 160<i32> : ptr32)
  Class: Eq_17
  DataType: ptr32
  OrigDataType: ptr32
T_18: (in SLICE(fp - 160<i32>, word32, 32) : word32)
  Class: Eq_18
  DataType: word32
  OrigDataType: word32
T_19: (in 00001FE8 : ptr32)
  Class: Eq_19
  DataType: ptr32
  OrigDataType: ptr32
T_20: (in SEQ(SLICE(fp - 160<i32>, word32, 32), 0x00001FE8<p32>) : word64)
  Class: Eq_20
  DataType: (ptr64 Eq_14)
  OrigDataType: (ptr64 (struct (0 T_23 t0000)))
T_21: (in 0<64> : word64)
  Class: Eq_21
  DataType: word64
  OrigDataType: word64
T_22: (in SEQ(SLICE(fp - 160<i32>, word32, 32), 0x00001FE8<p32>) + 0<64> : word64)
  Class: Eq_22
  DataType: word64
  OrigDataType: word64
T_23: (in Mem34[SEQ(SLICE(fp - 160<i32>, word32, 32), 0x00001FE8<p32>) + 0<64>:word64] : word64)
  Class: Eq_14
  DataType: Eq_14
  OrigDataType: word64
T_24: (in 0<64> : word64)
  Class: Eq_14
  DataType: word64
  OrigDataType: word64
T_25: (in r1_37 == 0<64> : bool)
  Class: Eq_25
  DataType: bool
  OrigDataType: bool
T_26: (in frame_dummy : ptr32)
  Class: Eq_26
  DataType: (ptr32 Eq_26)
  OrigDataType: (ptr32 (fn T_30 (T_29)))
T_27: (in signature of frame_dummy : void)
  Class: Eq_26
  DataType: (ptr32 Eq_26)
  OrigDataType: 
T_28: (in r14 : Eq_28)
  Class: Eq_28
  DataType: Eq_28
  OrigDataType: word64
T_29: (in 000004AE : ptr32)
  Class: Eq_28
  DataType: word64
  OrigDataType: (union (ptr32 u0) (word64 u1))
T_30: (in frame_dummy(0x4AE<u32>) : void)
  Class: Eq_30
  DataType: void
  OrigDataType: void
T_31: (in __do_global_ctors_aux : ptr32)
  Class: Eq_31
  DataType: (ptr32 Eq_31)
  OrigDataType: (ptr32 (fn T_33 ()))
T_32: (in signature of __do_global_ctors_aux : void)
  Class: Eq_31
  DataType: (ptr32 Eq_31)
  OrigDataType: 
T_33: (in __do_global_ctors_aux() : void)
  Class: Eq_33
  DataType: void
  OrigDataType: void
T_34: (in r14 : Eq_28)
  Class: Eq_28
  DataType: Eq_28
  OrigDataType: (union (word64 u0) ((ptr32 code) u1))
T_35: (in r3_7 : Eq_35)
  Class: Eq_35
  DataType: Eq_35
  OrigDataType: (union (int64 u1) (uint64 u0))
T_36: (in r3 : word64)
  Class: Eq_36
  DataType: word64
  OrigDataType: word64
T_37: (in SLICE(r3, word32, 32) : word32)
  Class: Eq_37
  DataType: word32
  OrigDataType: word32
T_38: (in 00002020 : ptr32)
  Class: Eq_38
  DataType: ptr32
  OrigDataType: ptr32
T_39: (in SEQ(SLICE(r3, word32, 32), 0x00002020<p32>) : word64)
  Class: Eq_39
  DataType: word64
  OrigDataType: word64
T_40: (in r1 : word64)
  Class: Eq_40
  DataType: word64
  OrigDataType: word64
T_41: (in SLICE(r1, word32, 32) : word32)
  Class: Eq_41
  DataType: word32
  OrigDataType: word32
T_42: (in 00002020 : ptr32)
  Class: Eq_42
  DataType: ptr32
  OrigDataType: ptr32
T_43: (in SEQ(SLICE(r1, word32, 32), 0x00002020<p32>) : word64)
  Class: Eq_43
  DataType: word64
  OrigDataType: word64
T_44: (in SEQ(SLICE(r3, word32, 32), 0x2020<u32>) - SEQ(SLICE(r1, word32, 32), 0x2020<u32>) : word64)
  Class: Eq_35
  DataType: Eq_35
  OrigDataType: word64
T_45: (in r3_10 : Eq_45)
  Class: Eq_45
  DataType: Eq_45
  OrigDataType: (union (int64 u1) (uint64 u0))
T_46: (in 63<i32> : int32)
  Class: Eq_46
  DataType: int32
  OrigDataType: int32
T_47: (in r3_7 >> 63<i32> : word64)
  Class: Eq_47
  DataType: uint64
  OrigDataType: uint64
T_48: (in 3<i32> : int32)
  Class: Eq_48
  DataType: int32
  OrigDataType: int32
T_49: (in r3_7 >> 3<i32> : word64)
  Class: Eq_49
  DataType: int64
  OrigDataType: int64
T_50: (in (r3_7 >> 63<i32>) + (r3_7 >> 3<i32>) : word64)
  Class: Eq_45
  DataType: Eq_45
  OrigDataType: uint64
T_51: (in 1<i32> : int32)
  Class: Eq_51
  DataType: int32
  OrigDataType: int32
T_52: (in r3_10 >> 1<i32> : word64)
  Class: Eq_52
  DataType: int64
  OrigDataType: int64
T_53: (in 0<64> : word64)
  Class: Eq_52
  DataType: int64
  OrigDataType: word64
T_54: (in r3_10 >> 1<i32> != 0<64> : bool)
  Class: Eq_54
  DataType: bool
  OrigDataType: bool
T_55: (in CC : byte)
  Class: Eq_55
  DataType: Eq_55
  OrigDataType: (union (bool u1) (byte u0))
T_56: (in register_tm_clones : ptr32)
  Class: Eq_56
  DataType: (ptr32 Eq_56)
  OrigDataType: (ptr32 (fn T_58 (T_28)))
T_57: (in signature of register_tm_clones : void)
  Class: Eq_56
  DataType: (ptr32 Eq_56)
  OrigDataType: 
T_58: (in register_tm_clones(r14) : void)
  Class: Eq_58
  DataType: void
  OrigDataType: void
T_59: (in call_frame_dummy : ptr32)
  Class: Eq_59
  DataType: (ptr32 Eq_59)
  OrigDataType: (ptr32 (fn T_61 ()))
T_60: (in signature of call_frame_dummy : void)
  Class: Eq_59
  DataType: (ptr32 Eq_59)
  OrigDataType: 
T_61: (in call_frame_dummy() : void)
  Class: Eq_61
  DataType: void
  OrigDataType: void
T_62: (in call_frame_dummy : ptr32)
  Class: Eq_59
  DataType: (ptr32 Eq_59)
  OrigDataType: (ptr32 (fn T_63 ()))
T_63: (in call_frame_dummy() : void)
  Class: Eq_61
  DataType: void
  OrigDataType: void
T_64: (in __do_global_dtors_aux : ptr32)
  Class: Eq_64
  DataType: (ptr32 Eq_64)
  OrigDataType: (ptr32 (fn T_66 ()))
T_65: (in signature of __do_global_dtors_aux : void)
  Class: Eq_64
  DataType: (ptr32 Eq_64)
  OrigDataType: 
T_66: (in __do_global_dtors_aux() : void)
  Class: Eq_66
  DataType: void
  OrigDataType: void
*/
typedef struct Globals {
} Eq_1;

typedef union Eq_14 {
	word64 u0;
	<anonymous> * u1;
} Eq_14;

typedef void (Eq_26)(Eq_28);

typedef union Eq_28 {
	word64 u0;
	<anonymous> * u1;
} Eq_28;

typedef void (Eq_31)();

typedef union Eq_35 {
	int64 u0;
	uint64 u1;
} Eq_35;

typedef union Eq_45 {
	int64 u0;
	uint64 u1;
} Eq_45;

typedef union Eq_55 {
	bool u0;
	byte u1;
} Eq_55;

typedef void (Eq_56)(Eq_28);

typedef void (Eq_59)();

typedef void (Eq_64)();

