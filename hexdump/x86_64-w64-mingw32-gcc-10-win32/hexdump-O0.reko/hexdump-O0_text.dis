void fn00000000637C1000()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO rax rcx
// Preserved: rsp
fn00000000637C1000_entry:
l00000000637C1000:
l00000000637C1007_thunk_fn00000000637C21A0:
	fn00000000637C21A0(0x00000000637C7000<p64>)
	return
fn00000000637C1000_exit:


word32 fn00000000637C1010(word32 edx, selector gs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      DllMain
// MayUse:  gs:[0..15] rdx:[0..31]
// LiveOut: rax
// Trashed: SCZO rax rcx rdx
// Preserved: r12 r13 r8 rbp rbx rdi rsi rsp
fn00000000637C1010_entry:
	word32 edx = SLICE(rdx, word32, 0)
l00000000637C1010:
	branch edx != 0<32> l00000000637C10A0
l00000000637C10A0:
	branch edx != 1<32> l00000000637C1158
l00000000637C1158:
	return 1<32>
l00000000637C10A9:
	word64 rbx_50 = Mem20[0x00000000637C41E0<p64>:word64]
	word64 rsi_51 = Mem20[Mem20[gs:0x30<32>:word64] + 8<64>:word64]
l00000000637C10E0:
	word32 edi_109
	__lock()
	word64 rax_63
	__cmpxchg(Mem20[rbx_50:word64], rsi_51, 0<u64>, out rax_63)
	branch rax_63 != 0<64> l00000000637C10D0
l00000000637C10D0:
	branch rsi_51 == rax_63 l00000000637C1190
l00000000637C1190:
	edi_109 = 1<32> (alias)
l00000000637C10D9:
	Sleep(0x3E8<u64>)
l00000000637C10ED:
	edi_109 = 0<32> (alias)
l00000000637C10EF:
	word64 rsi_80 = Mem20[0x00000000637C41F0<p64>:word64]
	branch SLICE(CONVERT(Mem20[rsi_80:word32], word32, uint64), word32, 0) == 1<32> l00000000637C11F0
l00000000637C11F0:
	_amsg_exit(0x1F<u64>)
l00000000637C1101:
	branch SLICE(CONVERT(Mem20[rsi_80:word32], word32, uint64), word32, 0) == 0<32> l00000000637C11B0
l00000000637C11B0:
	word64 rdx_94 = Mem20[0x00000000637C4230<p64>:word64]
	word64 rcx_95 = Mem20[0x00000000637C4220<p64>:word64]
	Mem96[rsi_80:word32] = 1<32>
	_initterm(rcx_95, rdx_94)
l00000000637C110B:
	branch SLICE(CONVERT(Mem98[rsi_80:word32], word32, uint64), word32, 0) == 1<32> l00000000637C11D0
l00000000637C11D0:
	_initterm(Mem98[0x00000000637C4200<p64>:word64], Mem98[0x00000000637C4210<p64>:word64])
	Mem106[rsi_80:word32] = 2<32>
l00000000637C1116:
	branch edi_109 == 0<32> l00000000637C11A0
l00000000637C11A0:
	Mem124[rbx_50:word64] = 0<u64>
l00000000637C111E:
	branch Mem126[Mem126[0x00000000637C41B0<p64>:word64]:word64] == 0<64> l00000000637C113A
l00000000637C112D:
	fn00000000637C1580(2<32>)
l00000000637C113A:
	Mem156[0x00000000637C7018<p64>:word32] = Mem126[0x00000000637C7018<p64>:word32] + 1<32>
	return 1<32>
l00000000637C1026:
	word32 edx_183 = SLICE(CONVERT(Mem20[0x00000000637C7018<p64>:word32], word32, uint64), word32, 0)
	word64 rax_182 = 0<u64>
	branch edx_183 <= 0<32> l00000000637C1090
l00000000637C1032:
	word64 rbx_188 = Mem20[0x00000000637C41E0<p64>:word64]
	Mem197[0x00000000637C7018<p64>:word32] = SLICE(CONVERT(edx_183 - 1<32>, word32, uint64), word32, 0)
l00000000637C105F:
	__lock()
	word64 rax_204
	__cmpxchg(Mem197[rbx_188:word64], 1<u64>, 0<u64>, out rax_204)
	branch rax_204 != 0<64> l00000000637C1058
l00000000637C1058:
	Sleep(0x3E8<u64>)
l00000000637C106F:
	word64 rdi_212 = Mem197[0x00000000637C41F0<p64>:word64]
	branch SLICE(CONVERT(Mem197[rdi_212:word32], word32, uint64), word32, 0) == 2<32> l00000000637C1170
l00000000637C1170:
	fn00000000637C22B0(0x00000000637C7000<p64>)
	Mem225[rdi_212:word32] = 0<32>
	Mem227[rbx_188:word64] = rax_204
	rax_182 = 1<u64>
l00000000637C1081:
	_amsg_exit(0x1F<u64>)
	rax_182 = 1<u64>
l00000000637C1090:
	return SLICE(rax_182, word32, 0)
fn00000000637C1010_exit:


word32 fn00000000637C1200(word32 edx, selector gs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      DllMain
// MayUse:  gs:[0..15] rdx:[0..31]
// LiveOut: rax
// Trashed: SCZO rax rcx rdx
// Preserved: r12 r13 r14 r8 rbx rsi rsp
fn00000000637C1200_entry:
	word32 edx = SLICE(rdx, word32, 0)
l00000000637C1200:
	word32 r14d_157
	word32 eax_118
	word64 rsi_19 = Mem17[0x00000000637C41D0<p64>:word64]
	Mem23[rsi_19:word32] = edx
	word64 r12_25 = CONVERT(edx, word32, uint64)
	word32 r12d_34 = SLICE(r12_25, word32, 0)
	branch edx != 0<32> l00000000637C1280
l00000000637C1280:
	fn00000000637C1800()
	eax_118 = SLICE(CONVERT(SLICE(r12_25 - 1<64>, word32, 0), word32, uint64), word32, 0) (alias)
	word64 rdx_36 = CONVERT(r12d_34, word32, uint64)
	branch eax_118 >u 1<32> l00000000637C1308
l00000000637C1308:
	fn00000000637C2140()
	r14d_157 = SLICE(CONVERT(eax_118, word32, uint64), word32, 0) (alias)
	branch r12d_34 != 3<32> l00000000637C1264
l00000000637C131A:
l00000000637C1298:
	word32 eax_53 = SLICE(CONVERT(fn00000000637C1010(rdx_36, gs), uint32, uint64), word32, 0)
	branch eax_53 == 0<32> l00000000637C1261
l00000000637C12A1:
	fn00000000637C2130()
	r14d_157 = SLICE(CONVERT(eax_53, word32, uint64), word32, 0) (alias)
	branch eax_53 == 0<32> l00000000637C1320
l00000000637C1320:
	branch r12d_34 != 1<32> l00000000637C1261
l00000000637C132A:
l00000000637C12B6:
	branch r12d_34 != 1<32> l00000000637C132C
l00000000637C132C:
	fn00000000637C2140()
	r14d_157 = SLICE(CONVERT(eax_53, word32, uint64), word32, 0) (alias)
l00000000637C12BC:
	fn00000000637C1530()
	fn00000000637C2140()
	r14d_157 = SLICE(CONVERT(eax_53, word32, uint64), word32, 0) (alias)
	branch eax_53 != 0<32> l00000000637C1264
l00000000637C12D8:
	fn00000000637C2140()
	fn00000000637C2130()
l00000000637C12F2:
	fn00000000637C1010(0<u64>, gs)
l00000000637C1222:
	eax_118 = SLICE(CONVERT(Mem23[0x00000000637C7018<p64>:word32], word32, uint64), word32, 0) (alias)
	branch eax_118 == 0<32> l00000000637C1261
l00000000637C122C:
	fn00000000637C1800()
	fn00000000637C2140()
l00000000637C123E:
	fn00000000637C2130()
	r14d_157 = SLICE(CONVERT(eax_118, word32, uint64), word32, 0) (alias)
	branch SLICE(CONVERT(fn00000000637C1010(CONVERT(r12d_34, word32, uint64), gs), uint32, uint64), word32, 0) != 0<32> l00000000637C1264
l00000000637C1261:
	r14d_157 = 0<32> (alias)
l00000000637C1264:
	Mem173[rsi_19:word32] = 0xFFFFFFFF<32>
	return SLICE(CONVERT(r14d_157, word32, uint64), word32, 0)
fn00000000637C1200_exit:


BOOL DllMain(HANDLE hModule, DWORD dwReason, LPVOID lpReserved)
// stackDelta: 8; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  gs:[0..15] rdx:[0..63]
// LiveOut: eax
// Trashed: eax
// Preserved:
DllMain_entry:
l00000000637C1350:
	Mem5[Mem0[0x00000000637C4240<p64>:word64]:word32] = 0<32>
l00000000637C135D_thunk_fn00000000637C1200:
	return SLICE(CONVERT(fn00000000637C1200(dwReason, gs), uint32, uint64), BOOL, 0)
DllMain_exit:


void fn00000000637C1370(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000637C1530
//      fn00000000637C23C0
// MayUse:  rcx:[0..63]
// LiveOut:
// Trashed: SCZO rax rcx rdx
// Preserved: rsp
fn00000000637C1370_entry:
l00000000637C1370:
l00000000637C137A_thunk_fn00000000637C21D0:
	fn00000000637C21D0(0x00000000637C7000<p64>, rcx)
	return
fn00000000637C1370_exit:


void fn00000000637C1380()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000637C23C0
// MayUse: 
// LiveOut:
// Trashed: SCZO rax rcx rdx
// Preserved: rsp
fn00000000637C1380_entry:
l00000000637C1380:
l00000000637C1387_thunk_fn00000000637C1370:
	fn00000000637C1370(0x00000000637C1390<p64>)
	return
fn00000000637C1380_exit:


void fn00000000637C1390()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: rsp
fn00000000637C1390_entry:
l00000000637C1390:
	return
fn00000000637C1390_exit:


void hexdump(word32 r8d)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
// MayUse:  r8d:[0..31]
// LiveOut:
// Trashed: SCZO rax rdx
// Preserved: rbp rsp
hexdump_entry:
l00000000637C13A0:
	Mem38[fp - 0x88<64> + CONVERT(SLICE(CONVERT(r8d, word32, uint64), word32, 0), word32, int64):byte] = 0x41<8>
	Mem46[fp - 0x88<64> + CONVERT(SLICE(CONVERT(SLICE(CONVERT(r8d, word32, uint64), word32, 0) + 1<32>, word32, uint64), word32, 0), word32, int64):byte] = 0x20<8>
	return
hexdump_exit:


void main(word32 ecx, word64 rdx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] rdx:[0..63]
// LiveOut:
// Trashed: SCZO r8 r9 rax rcx rdx
// Preserved: rbp rbx rsp
main_entry:
l00000000637C1422:
	fn00000000637C1530()
	strlen(Mem15[rdx:word64])
	hexdump(SLICE(CONVERT(ecx, word32, uint64), word32, 0))
	return
main_exit:


void fn00000000637C1480()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO rax rdx
// Preserved: rsp
fn00000000637C1480_entry:
l00000000637C1480:
	word64 rax_10 = Mem0[Mem0[0x00000000637C3010<p64>:word64]:word64]
	branch rax_10 == 0<64> l00000000637C14B5
l00000000637C1493:
l00000000637C1498:
	call rax_10 (retsize: 8;)
		uses: rdx:rax_16 + 8<64>
	word64 rax_16 = Mem15[0x00000000637C3010<p64>:word64]
	rax_10 = Mem15[rax_16 + 8<64>:word64]
	Mem19[0x00000000637C3010<p64>:word64] = rax_16 + 8<64>
	branch rax_10 != 0<64> l00000000637C1498
l00000000637C14B5:
	return
fn00000000637C1480_exit:


void fn00000000637C14C0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000637C1530
// MayUse: 
// LiveOut:
// Trashed: SCZO r8 rax rcx rdx
// Preserved: rbx rsi rsp
fn00000000637C14C0_entry:
l00000000637C14C0:
	word64 rdx_10 = Mem8[0x00000000637C4180<p64>:word64]
	word32 eax_12 = Mem8[rdx_10:word32]
	word32 ecx_33 = SLICE(CONVERT(eax_12, word32, uint64), word32, 0)
	branch eax_12 == 0xFFFFFFFF<32> l00000000637C1510
l00000000637C1510:
	word64 rax_18 = 0<u64>
l00000000637C1518:
	word64 r8_24 = CONVERT(SLICE(rax_18 + 1<64>, word32, 0), word32, uint64)
	ecx_33 = SLICE(CONVERT(SLICE(rax_18, word32, 0), word32, uint64), word32, 0) (alias)
	rax_18 = r8_24
	branch Mem8[rdx_10 + r8_24 * 8<64>:word64] != 0<64> l00000000637C1518
l00000000637C1528:
l00000000637C14D7:
	branch ecx_33 == 0<32> l00000000637C14FB
l00000000637C14DB:
	word64 rax_40 = CONVERT(ecx_33, word32, uint64)
	word64 rbx_44 = rdx_10 + rax_40 * 8<64>
	word64 rsi_47 = rdx_10 - 8<64> + (rax_40 - CONVERT(ecx_33 - 1<32>, word32, uint64)) * 8<64>
l00000000637C14F0:
	word64 r8_54
	call fn9090909090909090 (retsize: 8;)
		uses: r8:r8_54
		defs: r8:r8_54
	rbx_44 = rbx_44 - 8<64>
	branch rbx_44 != rsi_47 l00000000637C14F0
l00000000637C14FB:
l00000000637C1508_thunk_fn00000000637C1370:
	fn00000000637C1370(0x00000000637C1480<p64>)
	return
fn00000000637C14C0_exit:


void fn00000000637C1530()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      DllMain
//      main
// MayUse: 
// LiveOut:
// Trashed: SCZO r8 rax rcx rdx
// Preserved: rsp
fn00000000637C1530_entry:
l00000000637C1530:
	branch SLICE(CONVERT(Mem0[0x00000000637C7020<p64>:word32], word32, uint64), word32, 0) == 0<32> l00000000637C1540
l00000000637C1540:
	Mem10[0x00000000637C7020<p64>:word32] = 1<32>
l00000000637C154A_thunk_fn00000000637C14C0:
	fn00000000637C14C0()
	return
l00000000637C153A:
	return
fn00000000637C1530_exit:


void fn00000000637C1550(word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edx:[0..31]
// LiveOut:
// Trashed: SCZO rax rcx
// Preserved: rsp
fn00000000637C1550_entry:
l00000000637C1550:
	branch edx == 3<32> l00000000637C1570
l00000000637C1559:
	branch edx == 0<32> l00000000637C1570
l00000000637C1570:
	fn00000000637C1C10(edx)
	return
l00000000637C155D:
	return
fn00000000637C1550_exit:


word32 fn00000000637C1580(word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000637C1010
// MayUse:  edx:[0..31]
// LiveOut: edx
// Trashed: SCZO edx rax rcx
// Preserved: rbx rsi rsp
fn00000000637C1580_entry:
l00000000637C1580:
	word64 rax_10 = Mem8[0x00000000637C4170<p64>:word64]
	branch Mem8[rax_10:word32] == 2<32> l00000000637C1598
l00000000637C1592:
	Mem13[rax_10:word32] = 2<32>
l00000000637C1598:
	branch edx == 2<32> l00000000637C15B0
l00000000637C15B0:
	word64 rbx_18 = 0x00000000637CA050<p64>
	branch 0x00000000637CA050<p64> == 0x00000000637CA050<p64> l00000000637C15A2
l00000000637C15C3:
l00000000637C15C8:
	word64 rax_24 = Mem62[rbx_18:word64]
	branch rax_24 == 0<64> l00000000637C15D2
l00000000637C15D0:
	word64 rcx_80
	call rax_24 (retsize: 8;)
		uses: edx:edx_29,rcx:rcx_80
		defs: edx:edx_32,rcx:rcx_80
l00000000637C15D2:
	rbx_18 = rbx_18 + 8<64>
	branch 0x00000000637CA050<p64> != rbx_18 l00000000637C15C8
l00000000637C15DB:
	return edx
l00000000637C159D:
	branch edx == 1<32> l00000000637C15F0
l00000000637C15F0:
	fn00000000637C1C10(edx)
	return edx
l00000000637C15A2:
	return edx
fn00000000637C1580_exit:


void fn00000000637C1610()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO rax
// Preserved: rsp
fn00000000637C1610_entry:
l00000000637C1610:
	return
fn00000000637C1610_exit:


void fn00000000637C1620(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000637C1690
//      fn00000000637C1800
// MayUse:  rcx:[0..63]
// LiveOut:
// Trashed: SCZO r12 r8 r9 rax rbx rcx rdx rsp
// Preserved:
fn00000000637C1620_entry:
l00000000637C1620:
	word64 rax_24 = fn00000000637C2330(2<32>)
	fwrite(0x00000000637C4060<p64>, 1<u64>, 0x1B<u64>, rax_24)
	word64 rcx_52
	call msvcrt.dll!vfprintf (retsize: 8;)
		uses: r8:fp + 0x10<64>,r9:rax_24,rcx:fn00000000637C2330(2<32>),rdx:rcx
		defs: rcx:rcx_52
	abort()
l00000000637C168A_thunk_fn00000000637C1690:
	fn00000000637C1690(rcx_52)
	return
fn00000000637C1620_exit:


void fn00000000637C1690(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000637C1620
//      fn00000000637C1800
// MayUse:  rcx:[0..63]
// LiveOut:
// Trashed: SCZO r12 r8 r9 rax rbx rcx rdx rsi rsp
// Preserved:
fn00000000637C1690_entry:
l00000000637C1690:
	word64 rbx_182
	word64 rbx_13 = CONVERT(Mem11[0x00000000637C7064<p64>:word32], word32, int64)
	word32 ebx_16 = SLICE(rbx_13, word32, 0)
	branch ebx_16 <= 0<32> l00000000637C17C0
l00000000637C16AA:
	word64 rax_22 = Mem11[0x00000000637C7068<p64>:word64] + 0x18<64>
	word64 rcx_299 = 0<64>
l00000000637C16C0:
	word32 ecx_37 = SLICE(rcx_299, word32, 0)
	word64 rdx_26 = Mem11[rax_22:word64]
	branch rdx_26 >u rcx l00000000637C16DC
l00000000637C16C8:
	branch rcx <u rdx_26 + CONVERT(Mem11[Mem11[rax_22 + 8<64>:word64] + 8<64>:word32], word32, uint64) l00000000637C1763
l00000000637C16DC:
	rcx_299 = CONVERT(ecx_37 + 1<32>, word32, uint64)
	rax_22 = rax_22 + 0x28<64>
	rbx_182 = rbx_13 (alias)
	branch SLICE(rcx_299, word32, 0) != ebx_16 l00000000637C16C0
l00000000637C16E7:
	word64 rax_49 = fn00000000637C1E20(rcx)
	branch rax_49 == 0<64> l00000000637C17E2
l00000000637C16FB:
	word64 rbx_65 = rbx_182 * 5<64>
	word64 rax_67 = Mem62[0x00000000637C7068<p64>:word64] + (rbx_65 << 3<64>)
	Mem69[rax_67 + 0x20<64>:word64] = rax_49
	Mem70[rax_67:word32] = 0<32>
	word64 rax_72 = fn00000000637C1F50()
	word64 rax_85 = Mem70[0x00000000637C7068<p64>:word64]
	word64 rcx_84 = CONVERT(Mem70[rax_49 + 0xC<64>:word32], word32, uint64) + rax_72
	Mem86[rax_85 + 0x18<64> + (rbx_65 << 3<64>):word64] = rcx_84
	branch SEQ(SLICE(rax_85, word32, 32), VirtualQuery(rcx_84, fp - 0x48<64>, 0x30<u64>)) == 0<64> l00000000637C17C7
l00000000637C17C7:
	fn00000000637C1620(0x00000000637C40A0<p64>)
l00000000637C17E2:
	fn00000000637C1620(0x00000000637C4080<p64>)
l00000000637C17FD_thunk_fn00000000637C1800:
	fn00000000637C1800()
	return
l00000000637C1748:
	word64 rax_123 = CONVERT(dwLoc24, word32, uint64)
	word32 eax_142 = SLICE(rax_123, word32, 0)
	branch SLICE(CONVERT(SLICE(CONVERT(SLICE(rax_123 - 0x40<64>, word32, 0), word32, uint64), word32, 0) & 0xFFFFFFBF<32>, word32, uint64), word32, 0) == 0<32> l00000000637C175C
l00000000637C1754:
	branch SLICE(CONVERT(SLICE(CONVERT(SLICE(rax_123 - 4<64>, word32, 0), word32, uint64), word32, 0) & 0xFFFFFFFB<32>, word32, uint64), word32, 0) != 0<32> l00000000637C1770
l00000000637C1770:
	word64 r8_147 = 4<u64>
	branch eax_142 == 2<32> l00000000637C178C
l00000000637C1788_1:
	r8_147 = 0x40<64> (alias)
l00000000637C178C:
	word64 rbx_155 = (rbx_65 << 3<64>) + Mem86[0x00000000637C7068<p64>:word64]
	Mem157[rbx_155 + 8<64>:word64] = qwLoc48
	Mem160[rbx_155 + 0x10<64>:word64] = qwLoc30
	branch VirtualProtect(qwLoc48, qwLoc30, r8_147, rbx_155) != 0<32> l00000000637C175C
l00000000637C17A8:
	GetLastError()
	fn00000000637C1620(0x00000000637C40D8<p64>)
l00000000637C17C0:
	rbx_182 = 0<u64>
l00000000637C175C:
	Mem188[0x00000000637C7064<p64>:word32] = Mem186[0x00000000637C7064<p64>:word32] + 1<32>
l00000000637C1763:
	return
fn00000000637C1690_exit:


void fn00000000637C1800()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      DllMain
//      fn00000000637C1690
// MayUse: 
// LiveOut:
// Trashed: SCZO r12 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp
// Preserved: r13 r14
fn00000000637C1800_entry:
l00000000637C1800:
	word32 edi_31 = SLICE(CONVERT(Mem26[0x00000000637C7060<p64>:word32], word32, uint64), word32, 0)
	branch edi_31 == 0<32> l00000000637C1838
l00000000637C1838:
	Mem35[0x00000000637C7060<p64>:word32] = 1<32>
	word64 rax_46 = CONVERT(CONVERT(SLICE(CONVERT(fn00000000637C1EA0(), uint32, uint64), word32, 0), word32, int64) * 0x28<64> + 0xF<32>, word32, word64)
	fn00000000637C20F0(rax_46 & 0xFFFFFFFFFFFFFFF0<64>)
	word64 r12_54 = Mem35[0x00000000637C4190<p64>:word64]
	word64 rbx_102 = Mem35[0x00000000637C41A0<p64>:word64]
	Mem56[0x00000000637C7064<p64>:word32] = 0<32>
	Mem59[0x00000000637C7068<p64>:word64] = fp - 0x78<64> - (rax_46 & 0xFFFFFFFFFFFFFFF0<64>) + 0x20<64>
	word64 rax_61 = r12_54 - rbx_102
	branch rax_61 <= 7<64> l00000000637C1822
l00000000637C1891:
	word64 rax_621
	word64 rdx_620 = CONVERT(Mem59[rbx_102:word32], word32, uint64)
	word32 edx_68 = SLICE(rdx_620, word32, 0)
	branch rax_61 > 0xB<64> l00000000637C19C8
l00000000637C19C8:
	branch edx_68 != 0<32> l00000000637C1A40
l00000000637C19CC:
	rax_621 = CONVERT(Mem59[rbx_102 + 4<64>:word32], word32, uint64)
	branch SLICE(CONVERT(SLICE(CONVERT(SLICE(rax_621, word32, 0), word32, uint64), word32, 0) | Mem59[rbx_102 + 8<64>:word32], word32, uint64), word32, 0) != 0<32> l00000000637C18A8
l00000000637C19DA:
	rdx_620 = CONVERT(Mem59[rbx_102 + 0xC<64>:word32], word32, uint64)
	rbx_102 = rbx_102 + 0xC<64>
l00000000637C189D:
	branch SLICE(rdx_620, word32, 0) != 0<32> l00000000637C1A40
l00000000637C18A5:
	rax_621 = CONVERT(Mem59[rbx_102 + 4<64>:word32], word32, uint64)
l00000000637C18A8:
	branch SLICE(rax_621, word32, 0) != 0<32> l00000000637C1A40
l00000000637C1A40:
	branch rbx_102 >=u r12_54 l00000000637C1822
l00000000637C1A49:
	word64 r14_111 = Mem59[0x00000000637C41C0<p64>:word64]
l00000000637C1A50:
	word64 rsi_120 = CONVERT(Mem113[rbx_102 + 4<64>:word32], word32, uint64) + r14_111
	word32 r13d_124 = SLICE(CONVERT(SLICE(CONVERT(Mem113[rbx_102:word32], word32, uint64), word32, 0) + Mem113[rsi_120:word32], word32, uint64), word32, 0)
	fn00000000637C1690(rsi_120)
	Mem138[rsi_120:word32] = r13d_124
	rbx_102 = rbx_102 + 8<64>
	branch rbx_102 <u r12_54 l00000000637C1A50
l00000000637C1A70:
l00000000637C18B0:
	branch SLICE(CONVERT(Mem59[rbx_102 + 8<64>:word32], word32, uint64), word32, 0) != 1<32> l00000000637C1A81
l00000000637C18BC:
	word64 rbx_146 = rbx_102 + 0xC<64>
	branch rbx_146 >=u r12_54 l00000000637C1822
l00000000637C18C9:
	word64 r13_149 = Mem59[0x00000000637C41C0<p64>:word64]
l00000000637C190D:
	word64 rax_160 = CONVERT(Mem152[rbx_146:word32], word32, uint64) + r13_149
	word32 edx_163 = SLICE(CONVERT(CONVERT(Mem152[rbx_146 + 8<64>:byte], byte, word32), word32, uint64), word32, 0)
	word64 rsi_161 = CONVERT(Mem152[rbx_146 + 4<64>:word32], word32, uint64) + r13_149
	word64 r15_162 = Mem152[rax_160:word64]
	branch edx_163 == 0x20<32> l00000000637C1A18
l00000000637C1A18:
	word64 rdx_167 = CONVERT(Mem152[rsi_161:word32], word32, uint64)
	word64 rdx_170 = rdx_167 | 0xFFFFFFFF00000000<64>
	branch SLICE(rdx_167, word32, 0) < 0<32> l00000000637C1A26
l00000000637C1A22_1:
	rdx_170 = rdx_167
l00000000637C1A26:
	fn00000000637C1690(rsi_161)
	Mem202[rsi_161:word32] = SLICE(r15_162 + (rdx_170 - rax_160), word32, 0)
l00000000637C1928:
	branch edx_163 >u 0x20<32> l00000000637C19F0
l00000000637C19F0:
	branch edx_163 != 0x40<32> l00000000637C1A75
l00000000637C19F9:
	word64 r15_209 = r15_162 + (Mem152[rsi_161:word64] - rax_160)
	fn00000000637C1690(rsi_161)
	Mem217[rsi_161:word64] = r15_209
l00000000637C192E:
	branch edx_163 == 8<32> l00000000637C18E0
l00000000637C18E0:
	word64 rdx_221 = CONVERT(CONVERT(Mem152[rsi_161:byte], byte, word32), word32, uint64)
	branch SLICE(rdx_221, byte, 0) >= 0<8> l00000000637C18F6
l00000000637C18F2_1:
	rdx_221 = rdx_221 | 0xFFFFFFFFFFFFFF00<64>
l00000000637C18F6:
	fn00000000637C1690(rcx_246)
	Mem251[rsi_161:byte] = SLICE(r15_162 + (rdx_221 - rax_160), byte, 0)
l00000000637C1904:
	rbx_146 = rbx_146 + 0xC<64>
	branch rbx_146 >=u r12_54 l00000000637C1970
l00000000637C1933:
	branch edx_163 != 0x10<32> l00000000637C1A75
l00000000637C1A75:
	fn00000000637C1620(0x00000000637C4138<p64>)
l00000000637C1A81:
	fn00000000637C1620(0x00000000637C4100<p64>)
l00000000637C1A8F_thunk_fn00000000637C1A90:
	fn00000000637C1A90()
	return
l00000000637C193C:
	word64 rdx_312 = CONVERT(CONVERT(Mem152[rsi_161:word16], word16, word32), word32, uint64)
	branch SLICE(rdx_312, word16, 0) >= 0<16> l00000000637C1953
l00000000637C194F_1:
	rdx_312 = rdx_312 | 0xFFFFFFFFFFFF0000<64>
l00000000637C1953:
	fn00000000637C1690(rcx_338)
	Mem343[rsi_161:word16] = SLICE(r15_162 + (rdx_312 - rax_160), word16, 0)
	rbx_146 = rbx_146 + 0xC<64>
	branch rbx_146 <u r12_54 l00000000637C190D
l00000000637C196B:
l00000000637C1970:
	branch SLICE(CONVERT(Mem346[0x00000000637C7064<p64>:word32], word32, uint64), word32, 0) <= 0<32> l00000000637C1822
l00000000637C197E:
	word64 rbx_355 = 0<u64>
l00000000637C1990:
	word64 rax_365 = Mem346[0x00000000637C7068<p64>:word64] + rbx_355
	word64 r8_367 = CONVERT(Mem346[rax_365:word32], word32, uint64)
	branch SLICE(r8_367, word32, 0) == 0<32> l00000000637C19AF
l00000000637C19A2:
	VirtualProtect(Mem346[rax_365 + 8<64>:word64], Mem346[rax_365 + 0x10<64>:word64], r8_367, fp - 0x4C<64>)
l00000000637C19AF:
	edi_31 = SLICE(CONVERT(edi_31 + 1<32>, word32, uint64), word32, 0) (alias)
	rbx_355 = rbx_355 + 0x28<64>
	branch edi_31 < Mem346[0x00000000637C7064<p64>:word32] l00000000637C1990
l00000000637C19BE:
l00000000637C1822:
	return
fn00000000637C1800_exit:


void fn00000000637C1A90()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000637C1800
//      fn00000000637C1C10
// MayUse: 
// LiveOut:
// Trashed: SCZO rax rcx
// Preserved: r12 rbx rdi rsi rsp
fn00000000637C1A90_entry:
l00000000637C1A90:
	EnterCriticalSection(0x00000000637C70A0<p64>)
	word64 rbx_17 = Mem14[0x00000000637C7080<p64>:word64]
	branch rbx_17 == 0<64> l00000000637C1AE4
l00000000637C1AB2:
l00000000637C1AC0:
	word64 rax_27 = TlsGetValue(CONVERT(Mem14[rbx_17:word32], word32, uint64))
	branch GetLastError() != 0<32> l00000000637C1ADB
l00000000637C1ACD:
	branch rax_27 == 0<64> l00000000637C1ADB
l00000000637C1AD2:
	word64 rax_42
	call Mem14[rbx_17 + 8<64>:word64] (retsize: 8;)
		uses: rax:rax_42,rcx:rax_27
		defs: rax:rax_42
l00000000637C1ADB:
	rbx_17 = Mem14[rbx_17 + 0x10<64>:word64]
	branch rbx_17 != 0<64> l00000000637C1AC0
l00000000637C1AE4:
	LeaveCriticalSection(0x00000000637C70A0<p64>)
	return
fn00000000637C1A90_exit:


void fn00000000637C1B00(word32 ecx, word64 rdx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx:[0..31] rdx:[0..63]
// LiveOut:
// Trashed: SCZO rax rcx rdx
// Preserved: rbx rdi rsi rsp
fn00000000637C1B00_entry:
	word32 ecx = SLICE(rcx, word32, 0)
l00000000637C1B00:
	word32 edi_39 = SLICE(CONVERT(ecx, word32, uint64), word32, 0)
	branch SLICE(CONVERT(Mem11[0x00000000637C7088<p64>:word32], word32, uint64), word32, 0) != 0<32> l00000000637C1B20
l00000000637C1B20:
	word64 rax_28 = calloc(1<u64>, 0x18<u64>)
	branch rax_28 == 0<64> l00000000637C1B73
l00000000637C1B73:
l00000000637C1B37:
	Mem40[rax_28:word32] = edi_39
	Mem42[rax_28 + 8<64>:word64] = rdx
	EnterCriticalSection(0x00000000637C70A0<p64>)
	word64 rax_43 = Mem42[0x00000000637C7080<p64>:word64]
	Mem45[0x00000000637C7080<p64>:word64] = rax_28
	Mem46[rax_28 + 0x10<64>:word64] = rax_43
	LeaveCriticalSection(0x00000000637C70A0<p64>)
	return
l00000000637C1B16:
	return
fn00000000637C1B00_exit:


void fn00000000637C1B80(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx:[0..31]
// LiveOut:
// Trashed: SCZO rax rcx rdx
// Preserved: rbx rsp
fn00000000637C1B80_entry:
	word32 ecx = SLICE(rcx, word32, 0)
l00000000637C1B80:
	word32 ebx_65 = SLICE(CONVERT(ecx, word32, uint64), word32, 0)
	branch SLICE(CONVERT(Mem5[0x00000000637C7088<p64>:word32], word32, uint64), word32, 0) != 0<32> l00000000637C1BA0
l00000000637C1BA0:
	EnterCriticalSection(0x00000000637C70A0<p64>)
	word64 rcx_17 = Mem5[0x00000000637C7080<p64>:word64]
	branch rcx_17 == 0<64> l00000000637C1BE3
l00000000637C1BB9:
	word64 rdx_22 = 0<u64>
l00000000637C1BCB:
	word64 rax_33 = Mem5[rcx_17 + 0x10<64>:word64]
	branch SLICE(CONVERT(Mem5[rcx_17:word32], word32, uint64), word32, 0) != ebx_65 l00000000637C1BC0
l00000000637C1BC0:
	rdx_22 = rcx_17
	branch rax_33 == 0<64> l00000000637C1BE3
l00000000637C1BC8:
	rcx_17 = rax_33
l00000000637C1BD5:
	branch rdx_22 == 0<64> l00000000637C1C00
l00000000637C1C00:
	Mem44[0x00000000637C7080<p64>:word64] = rax_33
l00000000637C1BDA:
	Mem45[rdx_22 + 0x10<64>:word64] = rax_33
l00000000637C1BDE:
	free(rcx_17)
l00000000637C1BE3:
	LeaveCriticalSection(0x00000000637C70A0<p64>)
	return
l00000000637C1B91:
	return
fn00000000637C1B80_exit:


void fn00000000637C1C10(word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000637C1550
//      fn00000000637C1580
// MayUse:  edx:[0..31]
// LiveOut:
// Trashed: SCZO rax rcx
// Preserved: rbx rsp
fn00000000637C1C10_entry:
l00000000637C1C10:
	branch edx == 2<32> l00000000637C1C60
l00000000637C1C60:
	fn00000000637C20E0()
	return
l00000000637C1C1A:
	branch edx >u 2<32> l00000000637C1C48
l00000000637C1C48:
	branch edx != 3<32> l00000000637C1C38
l00000000637C1C4D:
	branch SLICE(CONVERT(Mem5[0x00000000637C7088<p64>:word32], word32, uint64), word32, 0) == 0<32> l00000000637C1C38
l00000000637C1C57:
	fn00000000637C1A90()
l00000000637C1C1C:
	branch edx == 0<32> l00000000637C1C70
l00000000637C1C70:
	branch SLICE(CONVERT(Mem5[0x00000000637C7088<p64>:word32], word32, uint64), word32, 0) != 0<32> l00000000637C1CD0
l00000000637C1CD0:
	fn00000000637C1A90()
l00000000637C1C7A:
	branch SLICE(CONVERT(Mem5[0x00000000637C7088<p64>:word32], word32, uint64), word32, 0) != 1<32> l00000000637C1C38
l00000000637C1C85:
	word64 rbx_52 = Mem5[0x00000000637C7080<p64>:word64]
	branch rbx_52 == 0<64> l00000000637C1CA9
l00000000637C1C91:
l00000000637C1C98:
	rbx_52 = Mem5[rbx_52 + 0x10<64>:word64]
	free(rbx_52)
	branch rbx_52 != 0<64> l00000000637C1C98
l00000000637C1CA9:
	Mem64[0x00000000637C7080<p64>:word64] = 0<64>
	Mem65[0x00000000637C7088<p64>:word32] = 0<32>
	DeleteCriticalSection(0x00000000637C70A0<p64>)
l00000000637C1C20:
	branch SLICE(CONVERT(Mem5[0x00000000637C7088<p64>:word32], word32, uint64), word32, 0) == 0<32> l00000000637C1CE0
l00000000637C1CE0:
	InitializeCriticalSection(0x00000000637C70A0<p64>)
l00000000637C1C2E:
	Mem73[0x00000000637C7088<p64>:word32] = 1<32>
l00000000637C1C38:
	return
fn00000000637C1C10_exit:


void fn00000000637C1D00(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx:[0..63]
// LiveOut:
// Trashed: SCZO rax rcx rdx
// Preserved: rsp
fn00000000637C1D00_entry:
l00000000637C1D00:
	branch Mem0[rcx:word16] != 0x5A4D<16> l00000000637C1D18
l00000000637C1D09:
	branch Mem0[rcx + CONVERT(Mem0[rcx + 0x3C<64>:word32], word32, int64):word32] == 0x4550<32> l00000000637C1D20
l00000000637C1D20:
	return
l00000000637C1D18:
	return
fn00000000637C1D00_exit:


void fn00000000637C1D30(word64 rcx, word64 rdx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx:[0..63] rdx:[0..63]
// LiveOut:
// Trashed: SCZO r8 r9 rax rcx rdx
// Preserved: rsp
fn00000000637C1D30_entry:
l00000000637C1D30:
	word64 rdx_8 = CONVERT(Mem0[rcx + 0x3C<64>:word32], word32, int64) + rcx
	word64 rax_11 = rdx_8 + 0x18<64> + CONVERT(CONVERT(Mem0[rdx_8 + 0x14<64>:word16], word16, word32), word32, uint64)
	word32 edx_14 = SLICE(CONVERT(CONVERT(Mem0[rdx_8 + 6<64>:word16], word16, word32), word32, uint64), word32, 0)
	branch edx_14 == 0<32> l00000000637C1D7C
l00000000637C1D4C:
	word64 r9_23 = rax_11 + 0x28<64> + CONVERT(edx_14 - 1<32>, word32, uint64) * 0x28<64>
l00000000637C1D60:
	word64 rcx_27 = CONVERT(Mem0[rax_11 + 0xC<64>:word32], word32, uint64)
	word32 edx_32 = SLICE(rcx_27, word32, 0)
	branch rcx_27 >u rdx l00000000637C1D73
l00000000637C1D6B:
	branch CONVERT(edx_32 + Mem0[rax_11 + 8<64>:word32], word32, uint64) >u rdx l00000000637C1D7E
l00000000637C1D73:
	rax_11 = rax_11 + 0x28<64>
	branch rax_11 != r9_23 l00000000637C1D60
l00000000637C1D7C:
l00000000637C1D7E:
	return
fn00000000637C1D30_exit:


void fn00000000637C1D80(word32 rax_32_32, word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rax_32_32:[0..31] rcx:[0..63]
// LiveOut:
// Trashed: SCZO r8 rax rcx rdx
// Preserved: r12 rbx rsi rsp
fn00000000637C1D80_entry:
l00000000637C1D80:
	branch SEQ(rax_32_32, strlen(rcx)) >u 8<64> l00000000637C1E10
l00000000637C1D96:
	word64 rdx_20 = Mem11[0x00000000637C41C0<p64>:word64]
	branch Mem11[rdx_20:word16] != 0x5A4D<16> l00000000637C1DFE
l00000000637C1DA7:
	word64 rax_26 = CONVERT(Mem11[rdx_20 + 0x3C<64>:word32], word32, int64) + rdx_20
	branch Mem11[rax_26:word32] != 0x4550<32> l00000000637C1DFE
l00000000637C1DB6:
	branch Mem11[rax_26 + 0x18<64>:word16] != 0x20B<16> l00000000637C1DFE
l00000000637C1DBE:
	word64 r12_33 = rax_26 + 0x18<64> + CONVERT(CONVERT(Mem11[rax_26 + 0x14<64>:word16], word16, word32), word32, uint64)
	word32 eax_36 = SLICE(CONVERT(CONVERT(Mem11[rax_26 + 6<64>:word16], word16, word32), word32, uint64), word32, 0)
	branch eax_36 == 0<32> l00000000637C1E10
l00000000637C1DCF:
	word64 rsi_45 = r12_33 + 0x28<64> + CONVERT(eax_36 - 1<32>, word32, uint64) * 0x28<64>
l00000000637C1DE9:
	branch strncmp(r12_33, rcx, 8<u64>) != 0<32> l00000000637C1DE0
l00000000637C1DE0:
	r12_33 = r12_33 + 0x28<64>
	branch r12_33 == rsi_45 l00000000637C1E10
l00000000637C1E10:
	return
l00000000637C1DFE:
	return
fn00000000637C1D80_exit:


word64 fn00000000637C1E20(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000637C1690
// MayUse:  rcx:[0..63]
// LiveOut: rax
// Trashed: SCZO r8 r9 rax rcx rdx
// Preserved: rsp
fn00000000637C1E20_entry:
l00000000637C1E20:
	word64 rdx_4 = Mem0[0x00000000637C41C0<p64>:word64]
	word64 rax_21 = 0<u64>
	branch Mem0[rdx_4:word16] != 0x5A4D<16> l00000000637C1E40
l00000000637C1E30:
	word64 r8_10 = CONVERT(Mem0[rdx_4 + 0x3C<64>:word32], word32, int64) + rdx_4
	branch Mem0[r8_10:word32] == 0x4550<32> l00000000637C1E48
l00000000637C1E48:
	branch Mem0[r8_10 + 0x18<64>:word16] != 0x20B<16> l00000000637C1E40
l00000000637C1E51:
	word64 rcx_18 = rcx - rdx_4
	word32 edx_22 = SLICE(CONVERT(CONVERT(Mem0[r8_10 + 6<64>:word16], word16, word32), word32, uint64), word32, 0)
	rax_21 = r8_10 + 0x18<64> + CONVERT(CONVERT(Mem0[r8_10 + 0x14<64>:word16], word16, word32), word32, uint64)
	branch edx_22 == 0<32> l00000000637C1E95
l00000000637C1E67:
	word64 r9_31 = rax_21 + 0x28<64> + CONVERT(edx_22 - 1<32>, word32, uint64) * 0x28<64>
l00000000637C1E78:
	word64 r8_35 = CONVERT(Mem0[rax_21 + 0xC<64>:word32], word32, uint64)
	word32 edx_40 = SLICE(r8_35, word32, 0)
	branch rcx_18 <u r8_35 l00000000637C1E8C
l00000000637C1E84:
	branch rcx_18 <u CONVERT(edx_40 + Mem0[rax_21 + 8<64>:word32], word32, uint64) l00000000637C1E40
l00000000637C1E8C:
	rax_21 = rax_21 + 0x28<64>
	branch rax_21 != r9_31 l00000000637C1E78
l00000000637C1E95:
	return 0<u64>
l00000000637C1E40:
	return rax_21
fn00000000637C1E20_exit:


word32 fn00000000637C1EA0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000637C1800
// MayUse: 
// LiveOut: rax
// Trashed: SCZO r8 rax rdx
// Preserved: rsp
fn00000000637C1EA0_entry:
l00000000637C1EA0:
	word64 rax_4 = Mem0[0x00000000637C41C0<p64>:word64]
	branch Mem0[rax_4:word16] != 0x5A4D<16> l00000000637C1EC0
l00000000637C1EB1:
	word64 rax_10 = rax_4 + CONVERT(Mem0[rax_4 + 0x3C<64>:word32], word32, int64)
	branch Mem0[rax_10:word32] == 0x4550<32> l00000000637C1EC8
l00000000637C1EC8:
	branch Mem0[rax_10 + 0x18<64>:word16] != 0x20B<16> l00000000637C1EC0
l00000000637C1ED0:
	return SLICE(CONVERT(SLICE(CONVERT(CONVERT(Mem0[rax_10 + 6<64>:word16], word16, word32), word32, uint64), word32, 0), word32, uint64), word32, 0)
l00000000637C1EC0:
	return 0<32>
fn00000000637C1EA0_exit:


void fn00000000637C1EE0(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx:[0..63]
// LiveOut:
// Trashed: SCZO r8 rax rcx rdx
// Preserved: rsp
fn00000000637C1EE0_entry:
l00000000637C1EE0:
	word64 r8_4 = Mem0[0x00000000637C41C0<p64>:word64]
	branch Mem0[r8_4:word16] != 0x5A4D<16> l00000000637C1F00
l00000000637C1EF1:
	word64 rdx_10 = CONVERT(Mem0[r8_4 + 0x3C<64>:word32], word32, int64) + r8_4
	branch Mem0[rdx_10:word32] == 0x4550<32> l00000000637C1F08
l00000000637C1F08:
	branch Mem0[rdx_10 + 0x18<64>:word16] != 0x20B<16> l00000000637C1F00
l00000000637C1F10:
	word64 rax_17 = rdx_10 + 0x18<64> + CONVERT(CONVERT(Mem0[rdx_10 + 0x14<64>:word16], word16, word32), word32, uint64) + 0x27<64>
	word32 edx_20 = SLICE(CONVERT(CONVERT(Mem0[rdx_10 + 6<64>:word16], word16, word32), word32, uint64), word32, 0)
	branch edx_20 == 0<32> l00000000637C1F48
l00000000637C1F21:
	word64 rdx_29 = rax_17 + 0x28<64> + CONVERT(edx_20 - 1<32>, word32, uint64) * 0x28<64>
l00000000637C1F30:
	branch (Mem0[rax_17 + 0<64>:byte] & 0x20<8>) == 0<8> l00000000637C1F3F
l00000000637C1F36:
	branch rcx == 0<64> l00000000637C1F00
l00000000637C1F3B:
	rcx = rcx - 1<64>
l00000000637C1F3F:
	rax_17 = rax_17 + 0x28<64>
	branch rax_17 != rdx_29 l00000000637C1F30
l00000000637C1F48:
	return
l00000000637C1F00:
	return
fn00000000637C1EE0_exit:


word64 fn00000000637C1F50()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000637C1690
// MayUse: 
// LiveOut: rax
// Trashed: SCZO r8 rax rdx
// Preserved: rsp
fn00000000637C1F50_entry:
l00000000637C1F50:
	word64 rax_4 = Mem0[0x00000000637C41C0<p64>:word64]
	word64 r8_15 = 0<u64>
	branch Mem0[rax_4:word16] != 0x5A4D<16> l00000000637C1F70
l00000000637C1F61:
	word64 rdx_10 = CONVERT(Mem0[rax_4 + 0x3C<64>:word32], word32, int64) + rax_4
	branch Mem0[rdx_10:word32] == 0x4550<32> l00000000637C1F78
l00000000637C1F78:
	branch Mem0[rdx_10 + 0x18<64>:word16] != 0x20B<16> l00000000637C1F82
l00000000637C1F7E_1:
	r8_15 = rax_4
l00000000637C1F82:
	return r8_15
l00000000637C1F70:
	return 0<u64>
fn00000000637C1F50_exit:


void fn00000000637C1F90(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx:[0..63]
// LiveOut:
// Trashed: SCZO r8 r9 rax rcx rdx
// Preserved: rsp
fn00000000637C1F90_entry:
l00000000637C1F90:
	word64 rax_4 = Mem0[0x00000000637C41C0<p64>:word64]
	branch Mem0[rax_4:word16] != 0x5A4D<16> l00000000637C1FB0
l00000000637C1FA1:
	word64 rdx_10 = CONVERT(Mem0[rax_4 + 0x3C<64>:word32], word32, int64) + rax_4
	branch Mem0[rdx_10:word32] == 0x4550<32> l00000000637C1FB8
l00000000637C1FB8:
	branch Mem0[rdx_10 + 0x18<64>:word16] != 0x20B<16> l00000000637C1FB0
l00000000637C1FC0:
	word64 rcx_16 = rcx - rax_4
	word64 rax_19 = rdx_10 + 0x18<64> + CONVERT(CONVERT(Mem0[rdx_10 + 0x14<64>:word16], word16, word32), word32, uint64)
	word32 edx_22 = SLICE(CONVERT(CONVERT(Mem0[rdx_10 + 6<64>:word16], word16, word32), word32, uint64), word32, 0)
	branch edx_22 == 0<32> l00000000637C1FB0
l00000000637C1FD4:
	word64 r9_31 = rax_19 + 0x28<64> + CONVERT(edx_22 - 1<32>, word32, uint64) * 0x28<64>
l00000000637C1FE0:
	word64 r8_35 = CONVERT(Mem0[rax_19 + 0xC<64>:word32], word32, uint64)
	word32 edx_40 = SLICE(r8_35, word32, 0)
	branch rcx_16 <u r8_35 l00000000637C1FF4
l00000000637C1FEC:
	branch rcx_16 <u CONVERT(edx_40 + Mem0[rax_19 + 8<64>:word32], word32, uint64) l00000000637C2008
l00000000637C2008:
	return
l00000000637C1FF4:
	rax_19 = rax_19 + 0x28<64>
	branch r9_31 != rax_19 l00000000637C1FE0
l00000000637C1FFD:
	return
l00000000637C1FB0:
	return
fn00000000637C1F90_exit:


void fn00000000637C2020(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx:[0..31]
// LiveOut:
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdx
// Preserved: rsp
fn00000000637C2020_entry:
l00000000637C2020:
	word64 r11_4 = Mem0[0x00000000637C41C0<p64>:word64]
	branch Mem0[r11_4:word16] != 0x5A4D<16> l00000000637C2042
l00000000637C2032:
	word64 r8_10 = CONVERT(Mem0[r11_4 + 0x3C<64>:word32], word32, int64) + r11_4
	branch Mem0[r8_10:word32] == 0x4550<32> l00000000637C2050
l00000000637C2050:
	branch Mem0[r8_10 + 0x18<64>:word16] != 0x20B<16> l00000000637C2042
l00000000637C2059:
	word64 rax_16 = CONVERT(Mem0[r8_10 + 0x90<64>:word32], word32, uint64)
	branch SLICE(rax_16, word32, 0) == 0<32> l00000000637C2042
l00000000637C2064:
	word64 rdx_23 = r8_10 + 0x18<64> + CONVERT(CONVERT(Mem0[r8_10 + 0x14<64>:word16], word16, word32), word32, uint64)
	word32 r8d_26 = SLICE(CONVERT(CONVERT(Mem0[r8_10 + 6<64>:word16], word16, word32), word32, uint64), word32, 0)
	branch r8d_26 == 0<32> l00000000637C2042
l00000000637C2078:
	word64 r10_35 = rdx_23 + 0x28<64> + CONVERT(r8d_26 - 1<32>, word32, uint64) * 0x28<64>
l00000000637C2088:
	word64 r9_39 = CONVERT(Mem0[rdx_23 + 0xC<64>:word32], word32, uint64)
	word32 r8d_44 = SLICE(r9_39, word32, 0)
	branch rax_16 <u r9_39 l00000000637C209D
l00000000637C2094:
	branch rax_16 <u CONVERT(r8d_44 + Mem0[rdx_23 + 8<64>:word32], word32, uint64) l00000000637C20B0
l00000000637C20B0:
	word64 rax_50 = rax_16 + r11_4
l00000000637C20BF:
	word32 ecx_67 = SLICE(rcx, word32, 0)
	branch SLICE(CONVERT(Mem0[rax_50 + 4<64>:word32], word32, uint64), word32, 0) != 0<32> l00000000637C20CF
l00000000637C20C8:
	branch SLICE(CONVERT(Mem0[rax_50 + 0xC<64>:word32], word32, uint64), word32, 0) == 0<32> l00000000637C20A6
l00000000637C20CF:
	branch ecx_67 > 0<32> l00000000637C20B8
l00000000637C20B8:
	rcx = CONVERT(ecx_67 - 1<32>, word32, uint64)
	rax_50 = rax_50 + 0x14<64>
l00000000637C20D3:
	return
l00000000637C209D:
	rdx_23 = rdx_23 + 0x28<64>
	branch r10_35 != rdx_23 l00000000637C2088
l00000000637C20A6:
	return
l00000000637C2042:
	return
fn00000000637C2020_exit:


void fn00000000637C20E0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000637C1C10
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: rsp
fn00000000637C20E0_entry:
l00000000637C20E0:
	__fninit()
	return
fn00000000637C20E0_exit:


void fn00000000637C20F0(word64 rax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000637C1800
// MayUse:  rax:[0..63]
// LiveOut:
// Trashed: SCZO
// Preserved: rax rcx rsp
fn00000000637C20F0_entry:
l00000000637C20F0:
	word64 rcx_10 = fp + 8<64>
	branch rax <u 0x1000<64> l00000000637C2118
l00000000637C20FF:
	rcx_10 = rcx_10 - 0x1000<64>
	Mem16[rcx_10:word64] = Mem14[rcx_10:word64]
	rax = rax - 0x1000<64>
	branch rax >u 0x1000<64> l00000000637C20FF
l00000000637C2118:
	word64 rcx_24 = rcx_10 - rax
	Mem27[rcx_24:word64] = Mem25[rcx_24:word64]
	return
fn00000000637C20F0_exit:


void fn00000000637C2130()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      DllMain
// MayUse: 
// LiveOut:
// Trashed: rax
// Preserved: rsp
fn00000000637C2130_entry:
l00000000637C2130:
	return
fn00000000637C2130_exit:


void fn00000000637C2140()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      DllMain
// MayUse: 
// LiveOut:
// Trashed: rax
// Preserved: rsp
fn00000000637C2140_entry:
l00000000637C2140:
	return
fn00000000637C2140_exit:


void fn00000000637C21A0(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000637C1000
// MayUse:  rcx:[0..63]
// LiveOut:
// Trashed: SCZO rax
// Preserved: rsp
fn00000000637C21A0_entry:
l00000000637C21A0:
	branch rcx == 0<64> l00000000637C21BF
l00000000637C21BF:
	return
l00000000637C21A5:
	Mem14[rcx + 0x10<64>:word64] = 0<64>
	Mem15[rcx + 8<64>:word64] = 0<64>
	Mem16[rcx:word64] = 0<64>
	return
fn00000000637C21A0_exit:


void fn00000000637C21D0(word64 rcx, word64 rdx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000637C1370
// MayUse:  rcx:[0..63] rdx:[0..63]
// LiveOut:
// Trashed: SCZO rax
// Preserved: rbp rbx rcx rdi rdx rsi rsp
fn00000000637C21D0_entry:
l00000000637C21D0:
	branch rcx == 0<64> l00000000637C228B
l00000000637C228B:
l00000000637C21E7:
	word64 rax_37
	word64 rdx_34
	word64 rdx_42
	call lock (retsize: 8;)
		uses: rcx:8<u64>,rdx:rdx
	branch Mem14[rcx:word64] == 0<64> l00000000637C2260
l00000000637C2260:
	rax_37 = calloc(0x20<u64>, 8<u64>)
	Mem38[rcx:word64] = rax_37
	rdx_34 = 8<u64>
	branch rax_37 == 0<64> l00000000637C2292
l00000000637C2277:
	Mem43[rcx + 8<64>:word64] = rax_37
	Mem44[rcx + 0x10<64>:word64] = rax_37 + 0x100<64>
	rdx_42 = rax_37 + 0x100<64>
l00000000637C21F7:
	rax_37 = Mem14[rcx + 8<64>:word64]
	rdx_42 = Mem14[rcx + 0x10<64>:word64]
l00000000637C21FF:
	branch rdx_42 == rax_37 l00000000637C2228
l00000000637C2228:
	word64 rcx_53 = Mem52[rcx:word64]
	word64 rax_54 = rax_37 - rcx_53
	word64 rdx_58 = rax_54 >> 3<64> << 4<64>
	word64 rax_60 = realloc(rcx_53, rdx_58)
	rdx_34 = rax_60
	branch rax_60 == 0<64> l00000000637C2292
l00000000637C2292:
	call unlock (retsize: 8;)
		uses: rcx:8<u64>,rdx:rdx_72
l00000000637C224C:
	Mem86[rcx:word64] = rax_60
	Mem89[rcx + 0x10<64>:word64] = rax_60 + rdx_58
	rax_37 = rax_60 + rax_54
l00000000637C2204:
	word64 rdx_91 = rax_37 + 8<64>
	Mem95[rcx + 8<64>:word64] = rdx_91
	Mem97[rax_37:word64] = rdx
	call unlock (retsize: 8;)
		uses: rcx:8<u64>,rdx:rdx_91
l00000000637C221B:
	return
fn00000000637C21D0_exit:


void fn00000000637C22B0(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000637C1010
// MayUse:  rcx:[0..63]
// LiveOut:
// Trashed: SCZO rax rcx
// Preserved: r12 rbx rsi rsp
fn00000000637C22B0_entry:
l00000000637C22B0:
	call lock (retsize: 8;)
		uses: rcx:8<u64>
	word64 r12_21 = Mem11[rcx:word64]
	word64 rbx_22 = Mem11[rcx + 8<64>:word64]
	Mem23[rcx + 0x10<64>:word64] = 0<64>
	Mem24[rcx + 8<64>:word64] = 0<64>
	Mem27[rcx:word64] = 0<64>
	word64 rcx_28
	call unlock (retsize: 8;)
		uses: rcx:8<u64>
		defs: rcx:rcx_28
	branch r12_21 == 0<64> l00000000637C2316
l00000000637C22F2:
	rbx_22 = rbx_22 - 8<64>
	branch r12_21 >u rbx_22 l00000000637C230E
l00000000637C22FB:
	word64 rax_41 = Mem27[rbx_22:word64]
	branch rax_41 == 0<64> l00000000637C22F2
l00000000637C2303:
	call rax_41 (retsize: 8;)
		uses: rcx:rcx_47
		defs: rcx:rcx_49
	rbx_22 = rbx_22 - 8<64>
	branch r12_21 <=u rbx_22 l00000000637C22FB
l00000000637C230E:
	free(r12_21)
l00000000637C2316:
	return
fn00000000637C22B0_exit:


word64 fn00000000637C2330(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000637C1620
// MayUse:  ecx:[0..31]
// LiveOut: rax
// Trashed: SCZO rax rcx rdx
// Preserved: rbx rsp
fn00000000637C2330_entry:
l00000000637C2330:
	word64 rax_13
	call _iob_func (retsize: 8;)
		uses: ecx:ecx
		defs: rax:rax_13
	return rax_13 + CONVERT(SLICE(CONVERT(ecx, word32, uint64), word32, 0), word32, uint64) * 0x30<64>
fn00000000637C2330_exit:


void fn00000000637C23C0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO rax rcx rdx
// Preserved: rsp
fn00000000637C23C0_entry:
l00000000637C23C0:
l00000000637C23C0_thunk_fn00000000637C1380:
	fn00000000637C1380()
	return
fn00000000637C23C0_exit:


