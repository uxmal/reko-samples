void fn0000000064141000()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO rax rcx
// Preserved: rsp
fn0000000064141000_entry:
l0000000064141000:
l0000000064141007_thunk_fn0000000064142870:
	fn0000000064142870(0x0000000064147000<p64>)
	return
fn0000000064141000_exit:


word32 fn0000000064141010(word32 edx, selector gs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      DllMain
// MayUse:  gs:[0..15] rdx:[0..31]
// LiveOut: rax
// Trashed: SCZO rax rcx rdx
// Preserved: r12 r13 r8 rbp rbx rdi rsi rsp
fn0000000064141010_entry:
	word32 edx = SLICE(rdx, word32, 0)
l0000000064141010:
	branch edx != 0<32> l00000000641410A0
l00000000641410A0:
	branch edx != 1<32> l0000000064141158
l0000000064141158:
	return 1<32>
l00000000641410A9:
	word64 rbx_50 = Mem20[0x0000000064144260<p64>:word64]
	word64 rsi_51 = Mem20[Mem20[gs:0x30<32>:word64] + 8<64>:word64]
l00000000641410E0:
	word32 edi_109
	__lock()
	word64 rax_63
	__cmpxchg(Mem20[rbx_50:word64], rsi_51, 0<u64>, out rax_63)
	branch rax_63 != 0<64> l00000000641410D0
l00000000641410D0:
	branch rsi_51 == rax_63 l0000000064141190
l0000000064141190:
	edi_109 = 1<32> (alias)
l00000000641410D9:
	Sleep(0x3E8<u64>)
l00000000641410ED:
	edi_109 = 0<32> (alias)
l00000000641410EF:
	word64 rsi_80 = Mem20[0x0000000064144270<p64>:word64]
	branch SLICE(CONVERT(Mem20[rsi_80:word32], word32, uint64), word32, 0) == 1<32> l00000000641411F0
l00000000641411F0:
	_amsg_exit(0x1F<u64>)
l0000000064141101:
	branch SLICE(CONVERT(Mem20[rsi_80:word32], word32, uint64), word32, 0) == 0<32> l00000000641411B0
l00000000641411B0:
	word64 rdx_94 = Mem20[0x00000000641442B0<p64>:word64]
	word64 rcx_95 = Mem20[0x00000000641442A0<p64>:word64]
	Mem96[rsi_80:word32] = 1<32>
	_initterm(rcx_95, rdx_94)
l000000006414110B:
	branch SLICE(CONVERT(Mem98[rsi_80:word32], word32, uint64), word32, 0) == 1<32> l00000000641411D0
l00000000641411D0:
	_initterm(Mem98[0x0000000064144280<p64>:word64], Mem98[0x0000000064144290<p64>:word64])
	Mem106[rsi_80:word32] = 2<32>
l0000000064141116:
	branch edi_109 == 0<32> l00000000641411A0
l00000000641411A0:
	Mem124[rbx_50:word64] = 0<u64>
l000000006414111E:
	branch Mem126[Mem126[0x0000000064144230<p64>:word64]:word64] == 0<64> l000000006414113A
l000000006414112D:
	fn00000000641416F0(2<32>)
l000000006414113A:
	Mem156[0x0000000064147018<p64>:word32] = Mem126[0x0000000064147018<p64>:word32] + 1<32>
	return 1<32>
l0000000064141026:
	word32 edx_183 = SLICE(CONVERT(Mem20[0x0000000064147018<p64>:word32], word32, uint64), word32, 0)
	word64 rax_182 = 0<u64>
	branch edx_183 <= 0<32> l0000000064141090
l0000000064141032:
	word64 rbx_188 = Mem20[0x0000000064144260<p64>:word64]
	Mem197[0x0000000064147018<p64>:word32] = SLICE(CONVERT(edx_183 - 1<32>, word32, uint64), word32, 0)
l000000006414105F:
	__lock()
	word64 rax_204
	__cmpxchg(Mem197[rbx_188:word64], 1<u64>, 0<u64>, out rax_204)
	branch rax_204 != 0<64> l0000000064141058
l0000000064141058:
	Sleep(0x3E8<u64>)
l000000006414106F:
	word64 rdi_212 = Mem197[0x0000000064144270<p64>:word64]
	branch SLICE(CONVERT(Mem197[rdi_212:word32], word32, uint64), word32, 0) == 2<32> l0000000064141170
l0000000064141170:
	fn0000000064142980(0x0000000064147000<p64>)
	Mem225[rdi_212:word32] = 0<32>
	Mem227[rbx_188:word64] = rax_204
	rax_182 = 1<u64>
l0000000064141081:
	_amsg_exit(0x1F<u64>)
	rax_182 = 1<u64>
l0000000064141090:
	return SLICE(rax_182, word32, 0)
fn0000000064141010_exit:


word32 fn0000000064141200(word32 edx, selector gs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      DllMain
// MayUse:  gs:[0..15] rdx:[0..31]
// LiveOut: rax
// Trashed: SCZO rax rcx rdx
// Preserved: r12 r13 r14 r8 rbx rsi rsp
fn0000000064141200_entry:
	word32 edx = SLICE(rdx, word32, 0)
l0000000064141200:
	word32 r14d_157
	word32 eax_118
	word64 rsi_19 = Mem17[0x0000000064144250<p64>:word64]
	Mem23[rsi_19:word32] = edx
	word64 r12_25 = CONVERT(edx, word32, uint64)
	word32 r12d_34 = SLICE(r12_25, word32, 0)
	branch edx != 0<32> l0000000064141280
l0000000064141280:
	fn0000000064141A10()
	eax_118 = SLICE(CONVERT(SLICE(r12_25 - 1<64>, word32, 0), word32, uint64), word32, 0) (alias)
	word64 rdx_36 = CONVERT(r12d_34, word32, uint64)
	branch eax_118 >u 1<32> l0000000064141308
l0000000064141308:
	fn0000000064142810()
	r14d_157 = SLICE(CONVERT(eax_118, word32, uint64), word32, 0) (alias)
	branch r12d_34 != 3<32> l0000000064141264
l000000006414131A:
l0000000064141298:
	word32 eax_53 = SLICE(CONVERT(fn0000000064141010(rdx_36, gs), uint32, uint64), word32, 0)
	branch eax_53 == 0<32> l0000000064141261
l00000000641412A1:
	fn0000000064142800()
	r14d_157 = SLICE(CONVERT(eax_53, word32, uint64), word32, 0) (alias)
	branch eax_53 == 0<32> l0000000064141320
l0000000064141320:
	branch r12d_34 != 1<32> l0000000064141261
l000000006414132A:
l00000000641412B6:
	branch r12d_34 != 1<32> l000000006414132C
l000000006414132C:
	fn0000000064142810()
	r14d_157 = SLICE(CONVERT(eax_53, word32, uint64), word32, 0) (alias)
l00000000641412BC:
	fn00000000641414C0()
	fn0000000064142810()
	r14d_157 = SLICE(CONVERT(eax_53, word32, uint64), word32, 0) (alias)
	branch eax_53 != 0<32> l0000000064141264
l00000000641412D8:
	fn0000000064142810()
	fn0000000064142800()
l00000000641412F2:
	fn0000000064141010(0<u64>, gs)
l0000000064141222:
	eax_118 = SLICE(CONVERT(Mem23[0x0000000064147018<p64>:word32], word32, uint64), word32, 0) (alias)
	branch eax_118 == 0<32> l0000000064141261
l000000006414122C:
	fn0000000064141A10()
	fn0000000064142810()
l000000006414123E:
	fn0000000064142800()
	r14d_157 = SLICE(CONVERT(eax_118, word32, uint64), word32, 0) (alias)
	branch SLICE(CONVERT(fn0000000064141010(CONVERT(r12d_34, word32, uint64), gs), uint32, uint64), word32, 0) != 0<32> l0000000064141264
l0000000064141261:
	r14d_157 = 0<32> (alias)
l0000000064141264:
	Mem173[rsi_19:word32] = 0xFFFFFFFF<32>
	return SLICE(CONVERT(r14d_157, word32, uint64), word32, 0)
fn0000000064141200_exit:


BOOL DllMain(HANDLE hModule, DWORD dwReason, LPVOID lpReserved)
// stackDelta: 8; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  gs:[0..15] rdx:[0..63]
// LiveOut: eax
// Trashed: eax
// Preserved:
DllMain_entry:
	word32 rdx_32_32_50 = SLICE(dwReason, word32, 32)
l0000000064141350:
	Mem6[Mem0[0x00000000641442C0<p64>:word64]:word32] = 0<32>
	word64 rdx_51 = SEQ(rdx_32_32_50, dwReason)
	branch dwReason == 1<32> l0000000064141370
l0000000064141370:
	fn00000000641414E0()
	fn0000000064141EC0()
	word64 rdx_36 = CONVERT(dwReason, DWORD, uint64)
l000000006414139A_thunk_fn0000000064141200:
	return SLICE(CONVERT(fn0000000064141200(rdx_36, gs), uint32, uint64), BOOL, 0)
l0000000064141366:
l000000006414136A_thunk_fn0000000064141200:
	return SLICE(CONVERT(fn0000000064141200(rdx_51, gs), uint32, uint64), BOOL, 0)
DllMain_exit:


void fn00000000641413A0(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000641414C0
//      fn0000000064142AF0
// MayUse:  rcx:[0..63]
// LiveOut:
// Trashed: SCZO rax rcx rdx
// Preserved: rsp
fn00000000641413A0_entry:
l00000000641413A0:
l00000000641413AA_thunk_fn00000000641428A0:
	fn00000000641428A0(0x0000000064147000<p64>, rcx)
	return
fn00000000641413A0_exit:


void fn00000000641413B0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000064142AF0
// MayUse: 
// LiveOut:
// Trashed: SCZO rax rcx rdx
// Preserved: rsp
fn00000000641413B0_entry:
l00000000641413B0:
l00000000641413B7_thunk_fn00000000641413A0:
	fn00000000641413A0(0x00000000641413C0<p64>)
	return
fn00000000641413B0_exit:


void fn00000000641413C0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: rsp
fn00000000641413C0_entry:
l00000000641413C0:
	return
fn00000000641413C0_exit:


word32 getIndex(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      foo
// MayUse:  rcx:[0..63]
// LiveOut: rax
// Trashed: SCZO rax
// Preserved: rsp
getIndex_entry:
l00000000641413D0:
	return SLICE(CONVERT(CONVERT(CONVERT(rcx == 0<64>, bool, int8), int8, uint32) + 1<32>, word32, uint64), word32, 0)
getIndex_exit:


void foo(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx:[0..63]
// LiveOut:
// Trashed: SCZO rax rdx
// Preserved: rsp
foo_entry:
l00000000641413E0:
	branch rcx == 0<64> l0000000064141400
l0000000064141400:
	return
l00000000641413E9:
	Mem19[rcx + CONVERT(SLICE(CONVERT(getIndex(rcx), uint32, uint64), word32, 0), word32, int64) * 4<64>:word32] = 0<32>
	return
foo_exit:


void fn0000000064141410()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO rax rdx
// Preserved: rsp
fn0000000064141410_entry:
l0000000064141410:
	word64 rax_10 = Mem0[Mem0[0x0000000064143010<p64>:word64]:word64]
	branch rax_10 == 0<64> l0000000064141445
l0000000064141423:
l0000000064141428:
	call rax_10 (retsize: 8;)
		uses: rdx:rax_16 + 8<64>
	word64 rax_16 = Mem15[0x0000000064143010<p64>:word64]
	rax_10 = Mem15[rax_16 + 8<64>:word64]
	Mem19[0x0000000064143010<p64>:word64] = rax_16 + 8<64>
	branch rax_10 != 0<64> l0000000064141428
l0000000064141445:
	return
fn0000000064141410_exit:


void fn0000000064141450()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000641414C0
// MayUse: 
// LiveOut:
// Trashed: SCZO r8 rax rcx rdx
// Preserved: rbx rsi rsp
fn0000000064141450_entry:
l0000000064141450:
	word64 rdx_10 = Mem8[0x0000000064144200<p64>:word64]
	word32 eax_12 = Mem8[rdx_10:word32]
	word32 ecx_33 = SLICE(CONVERT(eax_12, word32, uint64), word32, 0)
	branch eax_12 == 0xFFFFFFFF<32> l00000000641414A0
l00000000641414A0:
	word64 rax_18 = 0<u64>
l00000000641414A8:
	word64 r8_24 = CONVERT(SLICE(rax_18 + 1<64>, word32, 0), word32, uint64)
	ecx_33 = SLICE(CONVERT(SLICE(rax_18, word32, 0), word32, uint64), word32, 0) (alias)
	rax_18 = r8_24
	branch Mem8[rdx_10 + r8_24 * 8<64>:word64] != 0<64> l00000000641414A8
l00000000641414B8:
l0000000064141467:
	branch ecx_33 == 0<32> l000000006414148B
l000000006414146B:
	word64 rax_40 = CONVERT(ecx_33, word32, uint64)
	word64 rbx_44 = rdx_10 + rax_40 * 8<64>
	word64 rsi_47 = rdx_10 - 8<64> + (rax_40 - CONVERT(ecx_33 - 1<32>, word32, uint64)) * 8<64>
l0000000064141480:
	word64 r8_54
	call fn9090909090909090 (retsize: 8;)
		uses: r8:r8_54
		defs: r8:r8_54
	rbx_44 = rbx_44 - 8<64>
	branch rbx_44 != rsi_47 l0000000064141480
l000000006414148B:
l0000000064141498_thunk_fn00000000641413A0:
	fn00000000641413A0(0x0000000064141410<p64>)
	return
fn0000000064141450_exit:


void fn00000000641414C0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      DllMain
// MayUse: 
// LiveOut:
// Trashed: SCZO r8 rax rcx rdx
// Preserved: rsp
fn00000000641414C0_entry:
l00000000641414C0:
	branch SLICE(CONVERT(Mem0[0x0000000064147020<p64>:word32], word32, uint64), word32, 0) == 0<32> l00000000641414D0
l00000000641414D0:
	Mem10[0x0000000064147020<p64>:word32] = 1<32>
l00000000641414DA_thunk_fn0000000064141450:
	fn0000000064141450()
	return
l00000000641414CA:
	return
fn00000000641414C0_exit:


void fn00000000641414E0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      DllMain
// MayUse: 
// LiveOut:
// Trashed: SCZO rax rcx rdx
// Preserved: r12 rbp rbx rdi rsi rsp
fn00000000641414E0_entry:
l00000000641414E0:
	word64 rbx_19 = Mem17[0x0000000064143070<p64>:word64]
	branch rbx_19 == 0x2B992DDFA232<64> l0000000064141520
l0000000064141520:
	word64 rdx_54
	GetSystemTimeAsFileTime(fp - 0x38<64>)
	word32 ebp_38 = SLICE(CONVERT(GetCurrentProcessId(), DWORD, uint64), word32, 0)
	word32 edi_43 = SLICE(CONVERT(GetCurrentThreadId(), DWORD, uint64), word32, 0)
	word32 r12d_47 = SLICE(CONVERT(GetTickCount(), DWORD, uint64), word32, 0)
	QueryPerformanceCounter(fp - 0x30<64>)
	word64 rax_50 = CONVERT(r12d_47, word32, uint64) ^ (CONVERT(edi_43, word32, uint64) ^ (CONVERT(ebp_38, word32, uint64) ^ qwLoc30))
	word64 rax_51 = rax_50 & 0xFFFFFFFFFFFF<64>
	branch (rax_50 & 0xFFFFFFFFFFFF<64>) == rbx_19 l00000000641415A0
l00000000641415A0:
	rdx_54 = 0xFFFFD466D2205DCC<64>
	rax_51 = 0x2B992DDFA233<64>
l000000006414157B:
	rdx_54 = ~(rax_50 & 0xFFFFFFFFFFFF<64>)
l0000000064141581:
	Mem59[0x0000000064143070<p64>:word64] = rax_51
	Mem61[0x0000000064143080<p64>:word64] = rdx_54
	return
l0000000064141509:
	Mem76[0x0000000064143080<p64>:word64] = ~rbx_19
	return
fn00000000641414E0_exit:


void fn00000000641415C0(word64 rcx, word64 qwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx:[0..63] Stack +0000:[0..63]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00000000641415C0_exit:
fn00000000641415C0_entry:
l00000000641415C0:
	RtlCaptureContext(0x0000000064147040<p64>)
	word64 rsi_17 = Mem11[0x0000000064147138<p64>:word64]
	branch RtlLookupFunctionEntry(rsi_17, fp - 0x40<64>, 0<u64>) == 0<64> l000000006414169D
l00000000641415FD:
	call KERNEL32.dll!RtlVirtualUnwind (retsize: 8;)
		uses: r8:rsi_17,rax:0x0000000064147040<p64>,rcx:0<u64>,rdx:qwLoc40,Stack +0028:0x0000000064147040<p64>,Stack +0030:fp - 0x30<64>,Stack +0038:fp - 0x38<64>,Stack +0040:0<64>,Stack +0050:qwLoc40,Stack +0090:qwArg00
l0000000064141633:
	word64 rax_48 = Mem47[0x0000000064147138<p64>:word64]
	Mem55[0x00000000641470C0<p64>:word64] = rcx
	Mem56[0x0000000064147530<p64>:word64] = rax_48
	Mem58[0x0000000064147520<p64>:word64] = 0x1C0000409<64>
	word32 rax_32_32_70 = SLICE(SetUnhandledExceptionFilter(0<u64>), word32, 32)
	UnhandledExceptionFilter(0x0000000064144000<p64>)
	TerminateProcess(SEQ(rax_32_32_70, GetCurrentProcess()), 0xC0000409<u64>)
	abort()
l000000006414169D:
	Mem77[0x0000000064147138<p64>:word64] = qwArg00
	Mem79[0x00000000641470D8<p64>:word64] = fp - 0x10<64>


void fn00000000641416C0(word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edx:[0..31]
// LiveOut:
// Trashed: SCZO rax rcx
// Preserved: rsp
fn00000000641416C0_entry:
l00000000641416C0:
	branch edx == 3<32> l00000000641416E0
l00000000641416C9:
	branch edx == 0<32> l00000000641416E0
l00000000641416E0:
	fn00000000641422F0(edx)
	return
l00000000641416CD:
	return
fn00000000641416C0_exit:


word32 fn00000000641416F0(word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000064141010
// MayUse:  edx:[0..31]
// LiveOut: edx
// Trashed: SCZO edx rax rcx
// Preserved: rbx rsi rsp
fn00000000641416F0_entry:
l00000000641416F0:
	word64 rax_10 = Mem8[0x00000000641441F0<p64>:word64]
	branch Mem8[rax_10:word32] == 2<32> l0000000064141708
l0000000064141702:
	Mem13[rax_10:word32] = 2<32>
l0000000064141708:
	branch edx == 2<32> l0000000064141720
l0000000064141720:
	word64 rbx_18 = 0x000000006414A050<p64>
	branch 0x000000006414A050<p64> == 0x000000006414A050<p64> l0000000064141712
l0000000064141733:
l0000000064141738:
	word64 rax_24 = Mem62[rbx_18:word64]
	branch rax_24 == 0<64> l0000000064141742
l0000000064141740:
	word64 rcx_80
	call rax_24 (retsize: 8;)
		uses: edx:edx_29,rcx:rcx_80
		defs: edx:edx_32,rcx:rcx_80
l0000000064141742:
	rbx_18 = rbx_18 + 8<64>
	branch 0x000000006414A050<p64> != rbx_18 l0000000064141738
l000000006414174B:
	return edx
l000000006414170D:
	branch edx == 1<32> l0000000064141760
l0000000064141760:
	fn00000000641422F0(edx)
	return edx
l0000000064141712:
	return edx
fn00000000641416F0_exit:


void fn0000000064141780()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO rax
// Preserved: rsp
fn0000000064141780_entry:
l0000000064141780:
	return
fn0000000064141780_exit:


word64 fn0000000064141790(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000064141800
//      fn0000000064141A10
// MayUse:  rcx:[0..63]
// LiveOut: rcx
// Trashed: SCZO r12 r8 r9 rax rbx rcx rdx rsp
// Preserved:
fn0000000064141790_entry:
l0000000064141790:
	word64 rax_24 = fn0000000064142A00(2<32>)
	fwrite(0x0000000064144080<p64>, 1<u64>, 0x1B<u64>, rax_24)
	word64 rcx_52
	word64 rdx_54
	word64 r8_55
	call msvcrt.dll!vfprintf (retsize: 8;)
		uses: r8:fp + 0x10<64>,r9:rax_24,rcx:fn0000000064142A00(2<32>),rdx:rcx
		defs: r8:r8_55,rcx:rcx_52,rdx:rdx_54
	abort()
l00000000641417FA_thunk_fn0000000064141800:
	return fn0000000064141800(rcx_52, rdx_54, r8_55)
fn0000000064141790_exit:


word64 fn0000000064141800(word64 rcx, word64 rdx, word32 r8d)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000064141790
//      fn0000000064141A10
// MayUse:  r8:[0..31] rcx:[0..63] rdx:[0..63]
// LiveOut: rcx
// Trashed: SCZO r10 r12 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp
// Preserved:
fn0000000064141800_entry:
l0000000064141800:
	word64 rcx_107
	word64 rdi_187
	word64 rdi_19 = CONVERT(Mem17[0x00000000641475E4<p64>:word32], word32, int64)
	word32 edi_26 = SLICE(rdi_19, word32, 0)
	word64 rbx_25 = r8
	word32 ebx_195 = SLICE(r8, word32, 0)
	branch edi_26 <= 0<32> l00000000641419A8
l0000000064141822:
	word64 rax_32 = Mem17[0x00000000641475E8<p64>:word64] + 0x18<64>
	word64 rcx_451 = 0<64>
l0000000064141830:
	word32 ecx_47 = SLICE(rcx_451, word32, 0)
	word64 rdx_36 = Mem17[rax_32:word64]
	branch rcx <u rdx_36 l000000006414184C
l0000000064141838:
	rcx_107 = rcx_451 (alias)
	branch rcx <u rdx_36 + CONVERT(Mem17[Mem17[rax_32 + 8<64>:word64] + 8<64>:word32], word32, uint64) l00000000641418D7
l000000006414184C:
	rcx_451 = CONVERT(ecx_47 + 1<32>, word32, uint64)
	rax_32 = rax_32 + 0x28<64>
	rdi_187 = rdi_19 (alias)
	rbx_25 = r8 (alias)
	branch SLICE(rcx_451, word32, 0) != edi_26 l0000000064141830
l0000000064141857:
	ebx_195 = SLICE(rbx_25, word32, 0) (alias)
	word64 rax_62 = fn0000000064142500(rcx)
	branch rax_62 == 0<64> l00000000641419E2
l00000000641419E2:
	fn0000000064141790(0x00000000641440A0<p64>)
l000000006414186B:
	word64 rdi_88 = rdi_187 * 5<64>
	word64 rax_90 = Mem86[0x00000000641475E8<p64>:word64] + (rdi_88 << 3<64>)
	Mem92[rax_90 + 0x20<64>:word64] = rax_62
	Mem93[rax_90:word32] = 0<32>
	word64 rax_95 = fn0000000064142630()
	word64 rax_108 = Mem93[0x00000000641475E8<p64>:word64]
	rcx_107 = CONVERT(Mem93[rax_62 + 0xC<64>:word32], word32, uint64) + rax_95
	Mem109[rax_108 + 0x18<64> + (rdi_88 << 3<64>):word64] = rcx_107
	branch SEQ(SLICE(rax_108, word32, 32), VirtualQuery(rcx_107, fp - 0x58<64>, 0x30<u64>)) == 0<64> l00000000641419F1
l00000000641419F1:
	fn0000000064141790(0x00000000641440C0<p64>)
l0000000064141A0D_thunk_fn0000000064141A10:
	return fn0000000064141A10()
l00000000641418B8:
	word64 rax_143 = CONVERT(dwLoc34, word32, uint64)
	word32 eax_153 = SLICE(rax_143, word32, 0)
	branch SLICE(CONVERT(SLICE(CONVERT(SLICE(rax_143 - 0x40<64>, word32, 0), word32, uint64), word32, 0) & 0xFFFFFFBF<32>, word32, uint64), word32, 0) == 0<32> l00000000641418D0
l00000000641418C4:
	branch SLICE(CONVERT(SLICE(CONVERT(eax_153 - 4<32>, word32, uint64), word32, 0) & 0xFFFFFFFB<32>, word32, uint64), word32, 0) != 0<32> l0000000064141960
l0000000064141960:
	word64 rdi_167 = (rdi_88 << 3<64>) + Mem109[0x00000000641475E8<p64>:word64]
	Mem168[rdi_167 + 8<64>:word64] = qwLoc58
	Mem170[rdi_167 + 0x10<64>:word64] = qwLoc40
	rcx_107 = qwLoc58
	branch VirtualProtect(qwLoc58, qwLoc40, 0x40<u64>, rdi_167) != 0<32> l00000000641418D0
l0000000064141990:
	GetLastError()
	fn0000000064141790(0x00000000641440F8<p64>)
l00000000641419A8:
	rdi_187 = 0<u64>
l00000000641418D0:
	Mem193[0x00000000641475E4<p64>:word32] = Mem191[0x00000000641475E4<p64>:word32] + 1<32>
l00000000641418D7:
	byte bl_267 = SLICE(ebx_195, byte, 0)
	branch ebx_195 >=u 8<32> l0000000064141908
l0000000064141908:
	Mem213[rcx:word64] = Mem207[rdx:word64]
	word64 rax_215 = CONVERT(ebx_195, word32, uint64)
	Mem217[rcx - 8<64> + rax_215:word64] = Mem213[rdx - 8<64> + rax_215:word64]
	word64 r12_218 = rcx - (rcx + 8<64> & 0xFFFFFFFFFFFFFFF8<64>)
	rcx_107 = rcx + 8<64> & 0xFFFFFFFFFFFFFFF8<64>
	word64 rsi_222 = rdx - r12_218
	word32 ebx_226 = SLICE(CONVERT(SLICE(CONVERT(ebx_195 + SLICE(r12_218, word32, 0), word32, uint64), word32, 0) & 0xFFFFFFF8<32>, word32, uint64), word32, 0)
	branch ebx_226 <u 8<32> l00000000641418F9
l0000000064141935:
	word32 ebx_327 = SLICE(CONVERT(ebx_226 & 0xFFFFFFF8<32>, word32, uint64), word32, 0)
	word32 eax_233 = 0<32>
l000000006414193A:
	word64 rdx_238 = CONVERT(eax_233, word32, uint64)
	Mem245[(rcx + 8<64> & 0xFFFFFFFFFFFFFFF8<64>) + rdx_238:word64] = Mem242[rsi_222 + rdx_238:word64]
	eax_233 = SLICE(CONVERT(eax_233 + 8<32>, word32, uint64), word32, 0) (alias)
	branch eax_233 <u ebx_327 l000000006414193A
l000000006414194B:
	return rcx_107
l00000000641418DC:
	branch (bl_267 & 4<8>) != 0<8> l00000000641419B0
l00000000641419B0:
	Mem276[rcx:word32] = SLICE(CONVERT(Mem207[rdx:word32], word32, uint64), word32, 0)
	word64 rbx_274 = CONVERT(ebx_195, word32, uint64)
	Mem280[rcx - 4<64> + rbx_274:word32] = SLICE(CONVERT(Mem276[rdx - 4<64> + rbx_274:word32], word32, uint64), word32, 0)
l00000000641418E5:
	branch ebx_195 == 0<32> l00000000641418F9
l00000000641418E9:
	Mem287[rcx:byte] = SLICE(CONVERT(CONVERT(Mem207[rdx:byte], byte, word32), word32, uint64), byte, 0)
	branch (bl_267 & 2<8>) != 0<8> l00000000641419D0
l00000000641419D0:
	word64 rbx_292 = CONVERT(ebx_195, word32, uint64)
	Mem296[rcx - 2<64> + rbx_292:word16] = SLICE(CONVERT(CONVERT(Mem287[rdx - 2<64> + rbx_292:word16], word16, word32), word32, uint64), word16, 0)
l00000000641418F9:
	return rcx_107
fn0000000064141800_exit:


word64 fn0000000064141A10()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      DllMain
//      fn0000000064141800
// MayUse: 
// LiveOut: rcx
// Trashed: SCZO r10 r12 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp
// Preserved: r13 r14 r15
fn0000000064141A10_entry:
l0000000064141A10:
	word32 esi_31 = SLICE(CONVERT(Mem26[0x00000000641475E0<p64>:word32], word32, uint64), word32, 0)
	branch esi_31 == 0<32> l0000000064141A48
l0000000064141A48:
	Mem35[0x00000000641475E0<p64>:word32] = 1<32>
	word64 rax_46 = CONVERT(CONVERT(SLICE(CONVERT(fn0000000064142590(out rcx), uint32, uint64), word32, 0), word32, int64) * 0x28<64> + 0xF<32>, word32, word64)
	fn00000000641427C0(rax_46 & 0xFFFFFFFFFFFFFFF0<64>)
	word64 r12_54 = Mem35[0x0000000064144210<p64>:word64]
	word64 rbx_102 = Mem35[0x0000000064144220<p64>:word64]
	Mem56[0x00000000641475E4<p64>:word32] = 0<32>
	Mem59[0x00000000641475E8<p64>:word64] = fp - 0x78<64> - (rax_46 & 0xFFFFFFFFFFFFFFF0<64>) + 0x20<64>
	word64 rax_61 = r12_54 - rbx_102
	branch rax_61 <= 7<64> l0000000064141A32
l0000000064141AA1:
	word64 rax_678
	word64 rdx_65 = CONVERT(Mem59[rbx_102:word32], word32, uint64)
	word32 edx_68 = SLICE(rdx_65, word32, 0)
	branch rax_61 > 0xB<64> l0000000064141BF8
l0000000064141BF8:
	branch edx_68 != 0<32> l0000000064141C80
l0000000064141C00:
	rax_678 = CONVERT(Mem59[rbx_102 + 4<64>:word32], word32, uint64)
	branch SLICE(CONVERT(SLICE(CONVERT(SLICE(rax_678, word32, 0), word32, uint64), word32, 0) | Mem59[rbx_102 + 8<64>:word32], word32, uint64), word32, 0) != 0<32> l0000000064141AB8
l0000000064141C0E:
	rdx_65 = CONVERT(Mem59[rbx_102 + 0xC<64>:word32], word32, uint64)
	rbx_102 = rbx_102 + 0xC<64>
l0000000064141AAD:
	branch SLICE(rdx_65, word32, 0) != 0<32> l0000000064141C80
l0000000064141AB5:
	rax_678 = CONVERT(Mem59[rbx_102 + 4<64>:word32], word32, uint64)
l0000000064141AB8:
	branch SLICE(rax_678, word32, 0) != 0<32> l0000000064141C80
l0000000064141C80:
	branch rbx_102 >=u r12_54 l0000000064141A32
l0000000064141C89:
	word64 r13_112 = Mem59[0x0000000064144240<p64>:word64]
	word64 r12_120 = rbx_102 + 8<64>
l0000000064141CA8:
	rbx_102 = rbx_102 + 8<64>
	rcx = fn0000000064141800(CONVERT(Mem122[rbx_102 + 4<64>:word32], word32, uint64) + r13_112, fp - 0x50<64>, 4<u64>)
	branch rbx_102 != r12_120 l0000000064141CA8
l0000000064141CCC:
l0000000064141AC0:
	branch SLICE(CONVERT(Mem59[rbx_102 + 8<64>:word32], word32, uint64), word32, 0) != 1<32> l0000000064141CE8
l0000000064141ACC:
	word64 rbx_160 = rbx_102 + 0xC<64>
	word64 r13_162 = Mem59[0x0000000064144240<p64>:word64]
	branch rbx_160 <u r12_54 l0000000064141B29
l0000000064141B29:
	word64 rcx_275
	word64 rcx_237
	word64 rcx_218
	word32 r8d_178 = SLICE(CONVERT(CONVERT(Mem167[rbx_160 + 8<64>:byte], byte, word32), word32, uint64), word32, 0)
	word64 rcx_176 = CONVERT(Mem167[rbx_160 + 4<64>:word32], word32, uint64) + r13_162
	branch r8d_178 == 0x20<32> l0000000064141C50
l0000000064141C50:
	branch SLICE(CONVERT(Mem167[rcx_176:word32], word32, uint64), word32, 0) < 0<32> l0000000064141C62
l0000000064141C5E_1:
l0000000064141C62:
	rcx_218 = fn0000000064141800(rcx_218, fp - 0x50<64>, 4<u64>)
	rcx = rcx_218
l0000000064141B46:
	branch r8d_178 >u 0x20<32> l0000000064141C20
l0000000064141C20:
	branch r8d_178 != 0x40<32> l0000000064141CD1
l0000000064141C2A:
	rcx_237 = fn0000000064141800(rcx_237, fp - 0x50<64>, 8<u64>)
	rcx = rcx_237
l0000000064141B4C:
	branch r8d_178 == 8<32> l0000000064141AF0
l0000000064141AF0:
	branch SLICE(CONVERT(CONVERT(Mem167[rcx_176:byte], byte, word32), word32, uint64), byte, 0) >= 0<8> l0000000064141B08
l0000000064141B04_1:
l0000000064141B08:
	rcx_275 = fn0000000064141800(rcx_275, fp - 0x50<64>, 1<u64>)
	rcx = rcx_275
l0000000064141B20:
	rbx_160 = rbx_160 + 0xC<64>
	branch rbx_160 >=u r12_54 l0000000064141BA0
l0000000064141B52:
	branch r8d_178 != 0x10<32> l0000000064141CD1
l0000000064141CD1:
	fn0000000064141790(0x0000000064144158<p64>)
l0000000064141CE8:
	word64 rcx_333 = fn0000000064141790(0x0000000064144120<p64>)
l0000000064141CFF_thunk_fn0000000064141D00:
	return fn0000000064141D00(rcx_333)
l0000000064141B5C:
	branch SLICE(CONVERT(CONVERT(Mem167[rcx_176:word16], word16, word32), word32, uint64), word16, 0) >= 0<16> l0000000064141B75
l0000000064141B71_1:
l0000000064141B75:
	rbx_160 = rbx_160 + 0xC<64>
	rcx = fn0000000064141800(rcx, fp - 0x50<64>, 2<u64>)
	branch rbx_160 <u r12_54 l0000000064141B29
l0000000064141B96:
l0000000064141BA0:
	branch SLICE(CONVERT(Mem385[0x00000000641475E4<p64>:word32], word32, uint64), word32, 0) <= 0<32> l0000000064141A32
l0000000064141BAE:
	word64 rbx_394 = 0<u64>
l0000000064141BC0:
	word64 rax_401 = Mem385[0x00000000641475E8<p64>:word64] + rbx_394
	word64 r8_403 = CONVERT(Mem385[rax_401:word32], word32, uint64)
	branch SLICE(r8_403, word32, 0) == 0<32> l0000000064141BE0
l0000000064141BD2:
	rcx = Mem385[rax_401 + 8<64>:word64]
	VirtualProtect(rcx, Mem385[rax_401 + 0x10<64>:word64], r8_403, fp - 0x50<64>)
l0000000064141BE0:
	esi_31 = SLICE(CONVERT(esi_31 + 1<32>, word32, uint64), word32, 0) (alias)
	rbx_394 = rbx_394 + 0x28<64>
	branch esi_31 < Mem385[0x00000000641475E4<p64>:word32] l0000000064141BC0
l0000000064141BEF:
l0000000064141AEA:
l0000000064141A32:
	return rcx
fn0000000064141A10_exit:


word64 fn0000000064141D00(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000064141A10
// MayUse:  rcx:[0..63]
// LiveOut: rcx
// Trashed: SCZO r8 rax rcx rdx
// Preserved: rsp
fn0000000064141D00_entry:
l0000000064141D00:
	word32 eax_8 = SLICE(CONVERT(Mem0[rcx:word32], word32, uint64), word32, 0)
	branch eax_8 >u 0xC0000096<32> l0000000064141E40
l0000000064141D11:
	branch eax_8 <=u 0xC000008B<32> l0000000064141D70
l0000000064141D70:
	branch eax_8 == 0xC0000005<32> l0000000064141E10
l0000000064141E10:
	rcx = 0xB<u64>
	word64 rax_19 = signal(0xB<u64>, 0<u64>)
	branch rax_19 == 1<64> l0000000064141EA0
l0000000064141EA0:
	signal(0xB<u64>, 1<u64>)
	rcx = 0xB<u64>
l0000000064141E22:
	branch rax_19 == 0<64> l0000000064141E50
l0000000064141E27:
	rax_19(0xB<u64>)
	rcx = <invalid>
l0000000064141D7B:
	branch eax_8 <=u 0xC0000005<32> l0000000064141DC3
l0000000064141DC3:
	return rcx
l0000000064141D7D:
	branch eax_8 == 0xC0000008<32> l0000000064141D5F
l0000000064141D87:
	branch eax_8 != 0xC000001D<32> l0000000064141E40
l0000000064141E40:
l0000000064141D18:
	word64 rax_68 = CONVERT(eax_8 + 0x3FFFFF73<32>, word32, uint64)
	branch SLICE(rax_68, word32, 0) >u 9<32> l0000000064141D5C
l0000000064141D22:
	word64 rax_118
	switch (SLICE(CONVERT(Mem0[0x0000000064144190<p64> + rax_68 * 4<64>:word32], word32, int64) + 0x0000000064144190<p64>, word32, 0)) { l0000000064141D32 l0000000064141D32 l0000000064141D32 l0000000064141D32 l0000000064141D32 l0000000064141D5C l0000000064141D32 l0000000064141DD7 l0000000064141D5C l0000000064141D92 }
l0000000064141D92:
	rcx = 4<u64>
	word64 rax_81 = signal(4<u64>, 0<u64>)
	branch rax_81 == 1<64> l0000000064141E60
l0000000064141E60:
	signal(4<u64>, 1<u64>)
	rcx = 4<u64>
l0000000064141DA8:
	branch rax_81 == 0<64> l0000000064141E50
l0000000064141E50:
l0000000064141DB1:
	rax_81(4<u64>)
	word64 rcx_103 = <invalid>
	return rcx_103
l0000000064141DD7:
	rax_118 = signal(8<u64>, 0<u64>)
	branch rax_118 == 1<64> l0000000064141E80
l0000000064141E80:
	signal(8<u64>, 1<u64>)
	rcx = 8<u64>
l0000000064141D32:
	rax_118 = signal(8<u64>, 0<u64>)
	branch rax_118 != 1<64> l0000000064141DED
l0000000064141DED:
	rcx = 8<u64>
	branch rax_118 == 0<64> l0000000064141D5F
l0000000064141DFC:
	word64 rdx_150
	call rax_118 (retsize: 8;)
		uses: rcx:8<u64>,rdx:rdx_150
		defs: rcx:rcx_149,rdx:rdx_150
l0000000064141D48:
	signal(8<u64>, 1<u64>)
	fn00000000641427B0()
	rcx = 8<u64>
l0000000064141D5C:
l0000000064141D5F:
	return rcx
fn0000000064141D00_exit:


void fn0000000064141EC0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      DllMain
// MayUse: 
// LiveOut:
// Trashed: SCZO r8 r9 rax rcx rdx
// Preserved: r12 rbp rbx rdi rsi rsp
fn0000000064141EC0_entry:
l0000000064141EC0:
	word64 rax_21 = fn0000000064142630()
	word64 rax_30 = CONVERT(Mem17[0x0000000064147608<p64>:word32], word32, uint64)
	word32 rax_32_32_40 = SLICE(rax_30, word32, 32)
	branch SLICE(rax_30, word32, 0) != 0<32> l0000000064141F01
l0000000064141EDC:
	branch rax_21 == 0<64> l0000000064141F01
l0000000064141EE1:
	Mem39[0x0000000064147608<p64>:word32] = 1<32>
	word64 rax_41 = fn0000000064142460(rax_32_32_40, 0x00000000641441B8<p64>)
	branch rax_41 == 0<64> l0000000064141F10
l0000000064141F10:
	word64 rbx_52 = 0x0000000064147720<p64>
	word64 rcx_149 = 0x30<u64>
	word64 r12_56 = 0<u64>
	word64 rdi_146 = 0x0000000064147720<p64>
l0000000064141F30:
	branch rcx_149 == 0<64> l0000000064141F33
l0000000064141F33:
	word64 rcx_144 = 0x20<u64>
	word64 rdi_141 = 0x0000000064147620<p64>
	word32 ebp_177 = SLICE(0x0000000064141D00<p64> - rax_21, word32, 0)
l0000000064141F3E:
	branch rcx_144 == 0<64> l0000000064141F41
l0000000064141F41:
	word64 rdi_103 = 0x0000000064147620<p64>
l0000000064141F7D:
	word64 rax_79 = fn00000000641425C0(r12_56)
	branch rax_79 != 0<64> l0000000064141F50
l0000000064141F50:
	Mem90[rdi_103:byte] = 9<8>
	Mem95[rdi_103 + 4<64>:word32] = ebp_177
	rbx_52 = rbx_52 + 0xC<64>
	word32 edx_98 = SLICE(CONVERT(Mem95[rax_79 + 0xC<64>:word32], word32, uint64), word32, 0)
	Mem99[rbx_52 - 0xC<64>:word32] = edx_98
	Mem107[rbx_52 - 8<64>:word32] = SLICE(CONVERT(edx_98 + Mem99[rax_79 + 8<64>:word32], word32, uint64), word32, 0)
	Mem109[rbx_52 - 4<64>:word32] = SLICE(rdi_103 - rax_21, word32, 0)
	r12_56 = r12_56 + 1<64>
	rdi_103 = rdi_103 + 8<64>
	branch r12_56 == 0x20<64> l0000000064141FA0
l0000000064141FA0:
l0000000064141F8A:
	branch r12_56 == 0<64> l0000000064141EFC
l0000000064141F93:
l0000000064141FA5:
	word64 r9_138
	call KERNEL32.dll!RtlAddFunctionTable (retsize: 8;)
		uses: r8:rax_21,r9:r9_138,rcx:0x0000000064147720<p64>
		defs: r9:r9_138
l0000000064141F3E_1:
	Mem142[rdi_141:word64] = rax_41
	rdi_141 = rdi_141 + 8<i64>
	rcx_144 = rcx_144 - 1<64>
l0000000064141F30_1:
	Mem147[rdi_146:word64] = rax_41
	rdi_146 = rdi_146 + 8<i64>
	rcx_149 = rcx_149 - 1<64>
l0000000064141EFC:
l0000000064141F01:
	return
fn0000000064141EC0_exit:


void fn0000000064141FC0(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx:[0..63]
// LiveOut:
// Trashed: SCZO rax rcx rdx
// Preserved: r12 rsp
fn0000000064141FC0_entry:
l0000000064141FC0:
	word64 rdx_8 = Mem5[rcx:word64]
	word32 eax_12 = SLICE(CONVERT(Mem5[rdx_8:word32], word32, uint64), word32, 0)
	branch SLICE(CONVERT(SLICE(CONVERT(eax_12, word32, uint64), word32, 0) & 0x20FFFFFF<32>, word32, uint64), word32, 0) == 0x20474343<32> l00000000641420B0
l00000000641420B0:
	branch (Mem5[rdx_8 + 4<64>:byte] & 1<8>) != 0<8> l0000000064141FE2
l00000000641420BA:
l0000000064141FE2:
	branch eax_12 >u 0xC0000096<32> l0000000064142097
l0000000064141FED:
	branch eax_12 <=u 0xC000008B<32> l0000000064142048
l0000000064142048:
	branch eax_12 == 0xC0000005<32> l00000000641420F8
l00000000641420F8:
	word64 rax_35 = signal(0xB<u64>, 0<u64>)
	branch rax_35 == 1<64> l0000000064142159
l0000000064142159:
	signal(0xB<u64>, 1<u64>)
l000000006414210A:
	branch rax_35 == 0<64> l0000000064142097
l000000006414210F:
	rax_35(0xB<u64>)
l0000000064142053:
	branch eax_12 <=u 0xC0000005<32> l0000000064142090
l0000000064142090:
	branch eax_12 == 0x80000002<32> l0000000064142038
l0000000064142055:
	branch eax_12 == 0xC0000008<32> l0000000064142038
l000000006414205C:
	branch eax_12 != 0xC000001D<32> l0000000064142097
l0000000064141FF4:
	word64 rax_70 = CONVERT(eax_12 + 0x3FFFFF73<32>, word32, uint64)
	branch SLICE(rax_70, word32, 0) >u 9<32> l0000000064142038
l0000000064141FFE:
	word64 rax_115
	switch (SLICE(CONVERT(Mem5[0x00000000641441C0<p64> + rax_70 * 4<64>:word32], word32, int64) + 0x00000000641441C0<p64>, word32, 0)) { l000000006414200E l000000006414200E l000000006414200E l000000006414200E l000000006414200E l0000000064142038 l000000006414200E l00000000641420C9 l0000000064142038 l0000000064142063 }
l0000000064142063:
	word64 rax_84 = signal(4<u64>, 0<u64>)
	branch rax_84 == 1<64> l0000000064142120
l0000000064142120:
	signal(4<u64>, 1<u64>)
l0000000064142079:
	branch rax_84 == 0<64> l0000000064142097
l000000006414207E:
	rax_84(4<u64>)
l00000000641420C9:
	rax_115 = signal(8<u64>, 0<u64>)
	branch rax_115 == 1<64> l0000000064142140
l0000000064142140:
	signal(8<u64>, 1<u64>)
l000000006414200E:
	rax_115 = signal(8<u64>, 0<u64>)
	branch rax_115 != 1<64> l00000000641420DB
l00000000641420DB:
	branch rax_115 == 0<64> l0000000064142097
l0000000064142097:
	word64 rax_140 = Mem5[0x0000000064147600<p64>:word64]
	word32 eax_161 = SLICE(rax_140, word32, 0)
	branch rax_140 == 0<64> l00000000641420C0
l00000000641420C0:
	return
l00000000641420A3:
	switch (eax_161 - 0xC000008B<32>) { }
l00000000641420E0:
	call rax_115 (retsize: 8;)
		uses: rcx:8<u64>
l0000000064142024:
	signal(8<u64>, 1<u64>)
	fn00000000641427B0()
l0000000064142038:
l000000006414203D:
	return
fn0000000064141FC0_exit:


void fn0000000064142170()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000641422F0
// MayUse: 
// LiveOut:
// Trashed: SCZO rax rcx
// Preserved: r12 rbx rdi rsi rsp
fn0000000064142170_entry:
l0000000064142170:
	EnterCriticalSection(0x00000000641478C0<p64>)
	word64 rbx_17 = Mem14[0x00000000641478A0<p64>:word64]
	branch rbx_17 == 0<64> l00000000641421C4
l0000000064142192:
l00000000641421A0:
	word64 rax_27 = TlsGetValue(CONVERT(Mem14[rbx_17:word32], word32, uint64))
	branch GetLastError() != 0<32> l00000000641421BB
l00000000641421AD:
	branch rax_27 == 0<64> l00000000641421BB
l00000000641421B2:
	word64 rax_42
	call Mem14[rbx_17 + 8<64>:word64] (retsize: 8;)
		uses: rax:rax_42,rcx:rax_27
		defs: rax:rax_42
l00000000641421BB:
	rbx_17 = Mem14[rbx_17 + 0x10<64>:word64]
	branch rbx_17 != 0<64> l00000000641421A0
l00000000641421C4:
	LeaveCriticalSection(0x00000000641478C0<p64>)
	return
fn0000000064142170_exit:


void fn00000000641421E0(word32 ecx, word64 rdx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx:[0..31] rdx:[0..63]
// LiveOut:
// Trashed: SCZO rax rcx rdx
// Preserved: rbx rdi rsi rsp
fn00000000641421E0_entry:
	word32 ecx = SLICE(rcx, word32, 0)
l00000000641421E0:
	word32 edi_39 = SLICE(CONVERT(ecx, word32, uint64), word32, 0)
	branch SLICE(CONVERT(Mem11[0x00000000641478A8<p64>:word32], word32, uint64), word32, 0) != 0<32> l0000000064142200
l0000000064142200:
	word64 rax_28 = calloc(1<u64>, 0x18<u64>)
	branch rax_28 == 0<64> l0000000064142253
l0000000064142253:
l0000000064142217:
	Mem40[rax_28:word32] = edi_39
	Mem42[rax_28 + 8<64>:word64] = rdx
	EnterCriticalSection(0x00000000641478C0<p64>)
	word64 rax_43 = Mem42[0x00000000641478A0<p64>:word64]
	Mem45[0x00000000641478A0<p64>:word64] = rax_28
	Mem46[rax_28 + 0x10<64>:word64] = rax_43
	LeaveCriticalSection(0x00000000641478C0<p64>)
	return
l00000000641421F6:
	return
fn00000000641421E0_exit:


void fn0000000064142260(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx:[0..31]
// LiveOut:
// Trashed: SCZO rax rcx rdx
// Preserved: rbx rsp
fn0000000064142260_entry:
	word32 ecx = SLICE(rcx, word32, 0)
l0000000064142260:
	word32 ebx_65 = SLICE(CONVERT(ecx, word32, uint64), word32, 0)
	branch SLICE(CONVERT(Mem5[0x00000000641478A8<p64>:word32], word32, uint64), word32, 0) != 0<32> l0000000064142280
l0000000064142280:
	EnterCriticalSection(0x00000000641478C0<p64>)
	word64 rcx_17 = Mem5[0x00000000641478A0<p64>:word64]
	branch rcx_17 == 0<64> l00000000641422C3
l0000000064142299:
	word64 rdx_22 = 0<u64>
l00000000641422AB:
	word64 rax_33 = Mem5[rcx_17 + 0x10<64>:word64]
	branch SLICE(CONVERT(Mem5[rcx_17:word32], word32, uint64), word32, 0) != ebx_65 l00000000641422A0
l00000000641422A0:
	rdx_22 = rcx_17
	branch rax_33 == 0<64> l00000000641422C3
l00000000641422A8:
	rcx_17 = rax_33
l00000000641422B5:
	branch rdx_22 == 0<64> l00000000641422E0
l00000000641422E0:
	Mem44[0x00000000641478A0<p64>:word64] = rax_33
l00000000641422BA:
	Mem45[rdx_22 + 0x10<64>:word64] = rax_33
l00000000641422BE:
	free(rcx_17)
l00000000641422C3:
	LeaveCriticalSection(0x00000000641478C0<p64>)
	return
l0000000064142271:
	return
fn0000000064142260_exit:


void fn00000000641422F0(word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000641416C0
//      fn00000000641416F0
// MayUse:  edx:[0..31]
// LiveOut:
// Trashed: SCZO rax rcx
// Preserved: rbx rsp
fn00000000641422F0_entry:
l00000000641422F0:
	branch edx == 2<32> l00000000641423C0
l00000000641423C0:
	fn00000000641427B0()
	return
l00000000641422FE:
	branch edx >u 2<32> l0000000064142328
l0000000064142328:
	branch edx != 3<32> l0000000064142318
l000000006414232D:
	branch SLICE(CONVERT(Mem5[0x00000000641478A8<p64>:word32], word32, uint64), word32, 0) == 0<32> l0000000064142318
l0000000064142337:
	fn0000000064142170()
l0000000064142300:
	branch edx == 0<32> l0000000064142350
l0000000064142350:
	branch SLICE(CONVERT(Mem5[0x00000000641478A8<p64>:word32], word32, uint64), word32, 0) == 0<32> l000000006414235F
l000000006414235A:
	fn0000000064142170()
l000000006414235F:
	branch SLICE(CONVERT(Mem5[0x00000000641478A8<p64>:word32], word32, uint64), word32, 0) != 1<32> l0000000064142318
l000000006414236A:
	word64 rbx_52 = Mem5[0x00000000641478A0<p64>:word64]
	branch rbx_52 == 0<64> l0000000064142391
l0000000064142376:
l0000000064142380:
	rbx_52 = Mem5[rbx_52 + 0x10<64>:word64]
	free(rbx_52)
	branch rbx_52 != 0<64> l0000000064142380
l0000000064142391:
	Mem64[0x00000000641478A0<p64>:word64] = 0<64>
	Mem65[0x00000000641478A8<p64>:word32] = 0<32>
	DeleteCriticalSection(0x00000000641478C0<p64>)
l0000000064142304:
	branch SLICE(CONVERT(Mem5[0x00000000641478A8<p64>:word32], word32, uint64), word32, 0) == 0<32> l0000000064142340
l0000000064142340:
	InitializeCriticalSection(0x00000000641478C0<p64>)
l000000006414230E:
	Mem73[0x00000000641478A8<p64>:word32] = 1<32>
l0000000064142318:
	return
fn00000000641422F0_exit:


word32 fn00000000641423D0(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000641423F0
//      fn0000000064142460
//      fn0000000064142500
//      fn0000000064142590
//      fn00000000641425C0
//      fn0000000064142630
//      fn0000000064142660
//      fn00000000641426F0
// MayUse:  rcx:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdx
// Preserved: rsp
fn00000000641423D0_entry:
l00000000641423D0:
	word64 rdx_6 = CONVERT(Mem0[rcx + 0x3C<64>:word32], word32, int64) + rcx
	word64 rax_22 = 0<u64>
	branch Mem0[rdx_6:word32] != 0x4550<32> l00000000641423ED
l00000000641423E2:
	rax_22 = CONVERT(CONVERT(Mem0[rdx_6 + 0x18<64>:word16] == 0x20B<16>, bool, int8), int8, uint64) (alias)
l00000000641423ED:
	return SLICE(rax_22, word32, 0)
fn00000000641423D0_exit:


void fn00000000641423F0(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx:[0..63]
// LiveOut:
// Trashed: SCZO rax rdx
// Preserved: rsp
fn00000000641423F0_entry:
l00000000641423F0:
	branch Mem0[rcx:word16] != 0x5A4D<16> l0000000064142400
l0000000064142400:
	return
l00000000641423F7:
l00000000641423F7_thunk_fn00000000641423D0:
	fn00000000641423D0(rcx)
	return
fn00000000641423F0_exit:


void fn0000000064142410(word64 rcx, word64 rdx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx:[0..63] rdx:[0..63]
// LiveOut:
// Trashed: SCZO r8 r9 rax rcx
// Preserved: rsp
fn0000000064142410_entry:
l0000000064142410:
	word64 rcx_6 = rcx + CONVERT(Mem0[rcx + 0x3C<64>:word32], word32, int64)
	word64 rax_22 = rcx_6 + 0x18<64> + CONVERT(CONVERT(Mem0[rcx_6 + 0x14<64>:word16], word16, word32), word32, uint64)
	word32 ecx_12 = SLICE(CONVERT(CONVERT(Mem0[rcx_6 + 6<64>:word16], word16, word32), word32, uint64), word32, 0)
	branch ecx_12 == 0<32> l0000000064142455
l0000000064142428:
	word64 r9_21 = rax_22 + 0x28<64> + CONVERT(ecx_12 - 1<32>, word32, uint64) * 0x28<64>
l0000000064142438:
	word64 r8_25 = CONVERT(Mem0[rax_22 + 0xC<64>:word32], word32, uint64)
	word32 ecx_30 = SLICE(r8_25, word32, 0)
	branch r8_25 >u rdx l000000006414244C
l0000000064142444:
	branch CONVERT(ecx_30 + Mem0[rax_22 + 8<64>:word32], word32, uint64) >u rdx l0000000064142457
l000000006414244C:
	rax_22 = rax_22 + 0x28<64>
	branch rax_22 != r9_21 l0000000064142438
l0000000064142455:
l0000000064142457:
	return
fn0000000064142410_exit:


word64 fn0000000064142460(word32 rax_32_32, word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000064141EC0
// MayUse:  rax_32_32:[0..31] rcx:[0..63]
// LiveOut: rax
// Trashed: SCZO r8 rax rcx rdx
// Preserved: r12 rbx rsi rsp
fn0000000064142460_entry:
l0000000064142460:
	branch SEQ(rax_32_32, strlen(rcx)) >u 8<64> l00000000641424F0
l0000000064142476:
	word64 rcx_20 = Mem11[0x0000000064144240<p64>:word64]
	word64 r12_22 = 0<u64>
	branch Mem11[rcx_20:word16] != 0x5A4D<16> l00000000641424DE
l0000000064142487:
	branch SLICE(CONVERT(fn00000000641423D0(rcx_20), uint32, uint64), word32, 0) == 0<32> l00000000641424DE
l0000000064142490:
	word64 rcx_36 = rcx_20 + CONVERT(Mem11[rcx_20 + 0x3C<64>:word32], word32, int64)
	r12_22 = rcx_36 + 0x18<64> + CONVERT(CONVERT(Mem11[rcx_36 + 0x14<64>:word16], word16, word32), word32, uint64)
	word32 eax_42 = SLICE(CONVERT(CONVERT(Mem11[rcx_36 + 6<64>:word16], word16, word32), word32, uint64), word32, 0)
	branch eax_42 == 0<32> l00000000641424F0
l00000000641424A8:
	word64 rsi_51 = r12_22 + 0x28<64> + CONVERT(eax_42 - 1<32>, word32, uint64) * 0x28<64>
l00000000641424C9:
	branch strncmp(r12_22, rcx, 8<u64>) != 0<32> l00000000641424C0
l00000000641424C0:
	r12_22 = r12_22 + 0x28<64>
	branch r12_22 == rsi_51 l00000000641424F0
l00000000641424F0:
	return 0<u64>
l00000000641424DE:
	return r12_22
fn0000000064142460_exit:


word64 fn0000000064142500(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000064141800
// MayUse:  rcx:[0..63]
// LiveOut: rax
// Trashed: SCZO r10 r8 r9 rax rcx rdx
// Preserved: rsp
fn0000000064142500_entry:
l0000000064142500:
	word64 r10_5 = Mem0[0x0000000064144240<p64>:word64]
	word64 r8_29 = 0<u64>
	branch Mem0[r10_5:word16] != 0x5A4D<16> l0000000064142579
l0000000064142519:
	branch SLICE(CONVERT(fn00000000641423D0(r10_5), uint32, uint64), word32, 0) == 0<32> l0000000064142579
l0000000064142525:
	word64 r10_26 = r10_5 + CONVERT(Mem0[r10_5 + 0x3C<64>:word32], word32, int64)
	word64 rcx_25 = rcx - r10_5
	r8_29 = r10_26 + 0x18<64> + CONVERT(CONVERT(Mem0[r10_26 + 0x14<64>:word16], word16, word32), word32, uint64)
	word32 eax_32 = SLICE(CONVERT(CONVERT(Mem0[r10_26 + 6<64>:word16], word16, word32), word32, uint64), word32, 0)
	branch eax_32 == 0<32> l0000000064142576
l0000000064142545:
	word64 r9_41 = r8_29 + 0x28<64> + CONVERT(eax_32 - 1<32>, word32, uint64) * 0x28<64>
l0000000064142558:
	word64 rdx_45 = CONVERT(Mem0[r8_29 + 0xC<64>:word32], word32, uint64)
	word32 eax_50 = SLICE(rdx_45, word32, 0)
	branch rcx_25 <u rdx_45 l000000006414256D
l0000000064142564:
	branch rcx_25 <u CONVERT(eax_50 + Mem0[r8_29 + 8<64>:word32], word32, uint64) l0000000064142579
l000000006414256D:
	r8_29 = r8_29 + 0x28<64>
	branch r8_29 != r9_41 l0000000064142558
l0000000064142576:
	r8_29 = 0<u64>
l0000000064142579:
	return r8_29
fn0000000064142500_exit:


word32 fn0000000064142590(ptr64 & rcxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000064141A10
// MayUse: 
// LiveOut: rax rcx
// Trashed: SCZO rax rcx rdx
// Preserved: rsp
fn0000000064142590_entry:
l0000000064142590:
	word64 rcx_5 = Mem0[0x0000000064144240<p64>:word64]
	word64 rax_10 = 0<u64>
	branch Mem0[rcx_5:word16] != 0x5A4D<16> l00000000641425B6
l00000000641425A4:
	rax_10 = CONVERT(fn00000000641423D0(rcx_5), uint32, uint64)
	branch SLICE(rax_10, word32, 0) == 0<32> l00000000641425B6
l00000000641425AD:
	rax_10 = CONVERT(CONVERT(Mem0[CONVERT(Mem0[rcx_5 + 0x3C<64>:word32], word32, int64) + 6<64> + rcx_5:word16], word16, word32), word32, uint64)
l00000000641425B6:
	rcxOut = rcx_5
	return SLICE(rax_10, word32, 0)
fn0000000064142590_exit:


word64 fn00000000641425C0(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000064141EC0
// MayUse:  rcx:[0..63]
// LiveOut: rax
// Trashed: SCZO r8 r9 rax rcx rdx
// Preserved: rsp
fn00000000641425C0_entry:
l00000000641425C0:
	word64 r8_26 = 0<u64>
	word64 r9_44 = rcx
	word64 rcx_9 = Mem0[0x0000000064144240<p64>:word64]
	branch Mem0[rcx_9:word16] != 0x5A4D<16> l0000000064142624
l00000000641425D8:
	branch SLICE(CONVERT(fn00000000641423D0(rcx_9), uint32, uint64), word32, 0) == 0<32> l0000000064142624
l00000000641425E1:
	word64 rcx_23 = rcx_9 + CONVERT(Mem0[rcx_9 + 0x3C<64>:word32], word32, int64)
	r8_26 = rcx_23 + 0x18<64> + CONVERT(CONVERT(Mem0[rcx_23 + 0x14<64>:word16], word16, word32), word32, uint64)
	word32 eax_29 = SLICE(CONVERT(CONVERT(Mem0[rcx_23 + 6<64>:word16], word16, word32), word32, uint64), word32, 0)
	branch eax_29 == 0<32> l0000000064142621
l00000000641425F9:
	word64 rax_38 = r8_26 + 0x28<64> + CONVERT(eax_29 - 1<32>, word32, uint64) * 0x28<64>
l0000000064142608:
	branch (Mem0[r8_26 + 0x27<64>:byte] & 0x20<8>) == 0<8> l0000000064142618
l000000006414260F:
	branch r9_44 == 0<64> l0000000064142624
l0000000064142614:
	r9_44 = r9_44 - 1<64>
l0000000064142618:
	r8_26 = r8_26 + 0x28<64>
	branch r8_26 != rax_38 l0000000064142608
l0000000064142621:
	r8_26 = 0<u64>
l0000000064142624:
	return r8_26
fn00000000641425C0_exit:


word64 fn0000000064142630()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000064141800
//      fn0000000064141EC0
// MayUse: 
// LiveOut: rax
// Trashed: SCZO r8 rax rcx rdx
// Preserved: rsp
fn0000000064142630_entry:
l0000000064142630:
	word64 rcx_5 = Mem0[0x0000000064144240<p64>:word64]
	word64 r8_20 = 0<u64>
	branch Mem0[rcx_5:word16] != 0x5A4D<16> l0000000064142650
l0000000064142645:
	branch SLICE(CONVERT(fn00000000641423D0(rcx_5), uint32, uint64), word32, 0) == 0<32> l0000000064142650
l000000006414264C_1:
	r8_20 = rcx_5
l0000000064142650:
	return r8_20
fn0000000064142630_exit:


void fn0000000064142660(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx:[0..63]
// LiveOut:
// Trashed: SCZO r8 r9 rax rcx rdx
// Preserved: rsp
fn0000000064142660_entry:
l0000000064142660:
	word64 r9_5 = Mem0[0x0000000064144240<p64>:word64]
	branch Mem0[r9_5:word16] != 0x5A4D<16> l00000000641426CF
l0000000064142678:
	branch SLICE(CONVERT(fn00000000641423D0(r9_5), uint32, uint64), word32, 0) == 0<32> l00000000641426CF
l0000000064142684:
	word64 r9_26 = r9_5 + CONVERT(Mem0[r9_5 + 0x3C<64>:word32], word32, int64)
	word64 rcx_25 = rcx - r9_5
	word32 edx_32 = SLICE(CONVERT(CONVERT(Mem0[r9_26 + 6<64>:word16], word16, word32), word32, uint64), word32, 0)
	word64 rax_31 = r9_26 + 0x18<64> + CONVERT(CONVERT(Mem0[r9_26 + 0x14<64>:word16], word16, word32), word32, uint64)
	branch edx_32 == 0<32> l00000000641426CD
l00000000641426A4:
	word64 r9_41 = rax_31 + 0x28<64> + CONVERT(edx_32 - 1<32>, word32, uint64) * 0x28<64>
l00000000641426B0:
	word64 r8_45 = CONVERT(Mem0[rax_31 + 0xC<64>:word32], word32, uint64)
	word32 edx_50 = SLICE(r8_45, word32, 0)
	branch rcx_25 <u r8_45 l00000000641426C4
l00000000641426BC:
	branch rcx_25 <u CONVERT(edx_50 + Mem0[rax_31 + 8<64>:word32], word32, uint64) l00000000641426D8
l00000000641426D8:
	return
l00000000641426C4:
	rax_31 = rax_31 + 0x28<64>
	branch rax_31 != r9_41 l00000000641426B0
l00000000641426CD:
l00000000641426CF:
	return
fn0000000064142660_exit:


void fn00000000641426F0(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rcx:[0..31]
// LiveOut:
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdx
// Preserved: rsp
fn00000000641426F0_entry:
	word32 ecx = SLICE(rcx, word32, 0)
l00000000641426F0:
	word64 r11_5 = Mem0[0x0000000064144240<p64>:word64]
	word64 r8_11 = CONVERT(ecx, word32, uint64)
	branch Mem0[r11_5:word16] != 0x5A4D<16> l0000000064142768
l0000000064142709:
	branch SLICE(CONVERT(fn00000000641423D0(r11_5), uint32, uint64), word32, 0) == 0<32> l0000000064142768
l0000000064142715:
	word64 rcx_25 = CONVERT(Mem0[r11_5 + 0x3C<64>:word32], word32, int64) + r11_5
	word64 rax_27 = CONVERT(Mem0[rcx_25 + 0x90<64>:word32], word32, uint64)
	branch SLICE(rax_27, word32, 0) == 0<32> l0000000064142768
l0000000064142726:
	word64 rdx_34 = rcx_25 + 0x18<64> + CONVERT(CONVERT(Mem0[rcx_25 + 0x14<64>:word16], word16, word32), word32, uint64)
	word32 ecx_37 = SLICE(CONVERT(CONVERT(Mem0[rcx_25 + 6<64>:word16], word16, word32), word32, uint64), word32, 0)
	branch ecx_37 == 0<32> l0000000064142768
l0000000064142737:
	word64 r10_46 = rdx_34 + 0x28<64> + CONVERT(ecx_37 - 1<32>, word32, uint64) * 0x28<64>
l0000000064142748:
	word64 r9_50 = CONVERT(Mem0[rdx_34 + 0xC<64>:word32], word32, uint64)
	word32 ecx_55 = SLICE(r9_50, word32, 0)
	branch rax_27 <u r9_50 l000000006414275C
l0000000064142754:
	branch rax_27 <u CONVERT(ecx_55 + Mem0[rdx_34 + 8<64>:word32], word32, uint64) l0000000064142770
l0000000064142770:
	word64 rax_61 = rax_27 + r11_5
l0000000064142780:
	word32 r8d_78 = SLICE(r8_11, word32, 0)
	branch SLICE(CONVERT(Mem0[rax_61 + 4<64>:word32], word32, uint64), word32, 0) != 0<32> l000000006414278E
l0000000064142787:
	branch SLICE(CONVERT(Mem0[rax_61 + 0xC<64>:word32], word32, uint64), word32, 0) == 0<32> l0000000064142765
l000000006414278E:
	branch r8d_78 > 0<32> l0000000064142778
l0000000064142778:
	r8_11 = CONVERT(r8d_78 - 1<32>, word32, uint64)
	rax_61 = rax_61 + 0x14<64>
l0000000064142793:
	return
l000000006414275C:
	rdx_34 = rdx_34 + 0x28<64>
	branch rdx_34 != r10_46 l0000000064142748
l0000000064142765:
l0000000064142768:
	return
fn00000000641426F0_exit:


void fn00000000641427B0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000064141D00
//      fn0000000064141FC0
//      fn00000000641422F0
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: rsp
fn00000000641427B0_entry:
l00000000641427B0:
	__fninit()
	return
fn00000000641427B0_exit:


void fn00000000641427C0(word64 rax)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000064141A10
// MayUse:  rax:[0..63]
// LiveOut:
// Trashed: SCZO
// Preserved: rax rcx rsp
fn00000000641427C0_entry:
l00000000641427C0:
	word64 rcx_10 = fp + 8<64>
	branch rax <u 0x1000<64> l00000000641427E8
l00000000641427CF:
	rcx_10 = rcx_10 - 0x1000<64>
	Mem16[rcx_10:word64] = Mem14[rcx_10:word64]
	rax = rax - 0x1000<64>
	branch rax >u 0x1000<64> l00000000641427CF
l00000000641427E8:
	word64 rcx_24 = rcx_10 - rax
	Mem27[rcx_24:word64] = Mem25[rcx_24:word64]
	return
fn00000000641427C0_exit:


void fn0000000064142800()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      DllMain
// MayUse: 
// LiveOut:
// Trashed: rax
// Preserved: rsp
fn0000000064142800_entry:
l0000000064142800:
	return
fn0000000064142800_exit:


void fn0000000064142810()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      DllMain
// MayUse: 
// LiveOut:
// Trashed: rax
// Preserved: rsp
fn0000000064142810_entry:
l0000000064142810:
	return
fn0000000064142810_exit:


void fn0000000064142870(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000064141000
// MayUse:  rcx:[0..63]
// LiveOut:
// Trashed: SCZO rax
// Preserved: rsp
fn0000000064142870_entry:
l0000000064142870:
	branch rcx == 0<64> l000000006414288F
l000000006414288F:
	return
l0000000064142875:
	Mem14[rcx + 0x10<64>:word64] = 0<64>
	Mem15[rcx + 8<64>:word64] = 0<64>
	Mem16[rcx:word64] = 0<64>
	return
fn0000000064142870_exit:


void fn00000000641428A0(word64 rcx, word64 rdx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000641413A0
// MayUse:  rcx:[0..63] rdx:[0..63]
// LiveOut:
// Trashed: SCZO rax
// Preserved: rbp rbx rcx rdi rdx rsi rsp
fn00000000641428A0_entry:
l00000000641428A0:
	branch rcx == 0<64> l000000006414295B
l000000006414295B:
l00000000641428B7:
	word64 rax_37
	word64 rdx_34
	word64 rdx_42
	call lock (retsize: 8;)
		uses: rcx:8<u64>,rdx:rdx
	branch Mem14[rcx:word64] == 0<64> l0000000064142930
l0000000064142930:
	rax_37 = calloc(0x20<u64>, 8<u64>)
	Mem38[rcx:word64] = rax_37
	rdx_34 = 8<u64>
	branch rax_37 == 0<64> l0000000064142962
l0000000064142947:
	Mem43[rcx + 8<64>:word64] = rax_37
	Mem44[rcx + 0x10<64>:word64] = rax_37 + 0x100<64>
	rdx_42 = rax_37 + 0x100<64>
l00000000641428C7:
	rax_37 = Mem14[rcx + 8<64>:word64]
	rdx_42 = Mem14[rcx + 0x10<64>:word64]
l00000000641428CF:
	branch rdx_42 == rax_37 l00000000641428F8
l00000000641428F8:
	word64 rcx_53 = Mem52[rcx:word64]
	word64 rax_54 = rax_37 - rcx_53
	word64 rdx_58 = rax_54 >> 3<64> << 4<64>
	word64 rax_60 = realloc(rcx_53, rdx_58)
	rdx_34 = rax_60
	branch rax_60 == 0<64> l0000000064142962
l0000000064142962:
	call unlock (retsize: 8;)
		uses: rcx:8<u64>,rdx:rdx_72
l000000006414291C:
	Mem87[rcx:word64] = rax_60
	Mem89[rcx + 0x10<64>:word64] = rax_60 + rdx_58
	rax_37 = rax_60 + rax_54
l00000000641428D4:
	word64 rdx_91 = rax_37 + 8<64>
	Mem95[rcx + 8<64>:word64] = rdx_91
	Mem97[rax_37:word64] = rdx
	call unlock (retsize: 8;)
		uses: rcx:8<u64>,rdx:rdx_91
l00000000641428EB:
	return
fn00000000641428A0_exit:


void fn0000000064142980(word64 rcx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000064141010
// MayUse:  rcx:[0..63]
// LiveOut:
// Trashed: SCZO rax rcx
// Preserved: r12 rbx rsi rsp
fn0000000064142980_entry:
l0000000064142980:
	call lock (retsize: 8;)
		uses: rcx:8<u64>
	word64 r12_21 = Mem11[rcx:word64]
	word64 rbx_22 = Mem11[rcx + 8<64>:word64]
	Mem23[rcx + 0x10<64>:word64] = 0<64>
	Mem24[rcx + 8<64>:word64] = 0<64>
	Mem27[rcx:word64] = 0<64>
	word64 rcx_28
	call unlock (retsize: 8;)
		uses: rcx:8<u64>
		defs: rcx:rcx_28
	branch r12_21 == 0<64> l00000000641429E6
l00000000641429C2:
	rbx_22 = rbx_22 - 8<64>
	branch r12_21 >u rbx_22 l00000000641429DE
l00000000641429CB:
	word64 rax_41 = Mem27[rbx_22:word64]
	branch rax_41 == 0<64> l00000000641429C2
l00000000641429D3:
	call rax_41 (retsize: 8;)
		uses: rcx:rcx_47
		defs: rcx:rcx_49
	rbx_22 = rbx_22 - 8<64>
	branch r12_21 <=u rbx_22 l00000000641429CB
l00000000641429DE:
	free(r12_21)
l00000000641429E6:
	return
fn0000000064142980_exit:


word64 fn0000000064142A00(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000064141790
// MayUse:  ecx:[0..31]
// LiveOut: rax
// Trashed: SCZO rax rcx rdx
// Preserved: rbx rsp
fn0000000064142A00_entry:
l0000000064142A00:
	word64 rax_13
	call _iob_func (retsize: 8;)
		uses: ecx:ecx
		defs: rax:rax_13
	return rax_13 + CONVERT(SLICE(CONVERT(ecx, word32, uint64), word32, 0), word32, uint64) * 0x30<64>
fn0000000064142A00_exit:


void fn0000000064142AF0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO rax rcx rdx
// Preserved: rsp
fn0000000064142AF0_entry:
l0000000064142AF0:
l0000000064142AF0_thunk_fn00000000641413B0:
	fn00000000641413B0()
	return
fn0000000064142AF0_exit:


